/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package System;

import javax.swing.*;
import java.util.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author tomas
 */
public class PlaneringsYta extends javax.swing.JFrame {
    
    private InfDB idb;
    private ArrayList<String> orders;
    private ArrayList<String> personalId;
    

    /**
     * Creates new form Testandet
     */
    public PlaneringsYta(InfDB idb) {
        this.idb = idb;
        orders = getOrderLista();
        personalId = getPersonalIdLista();
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        personalTillHatt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderLista = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        personalIdLista = new javax.swing.JList<>();
        taBortpersonalFranHatt = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        personalTillHatt.setText("Lägg till Personal till Hatt");
        personalTillHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalTillHattActionPerformed(evt);
            }
        });

        orderLista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = orders.toArray(new String[orders.size()]);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(orderLista);

        personalIdLista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = personalId.toArray(new String[personalId.size()]);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(personalIdLista);

        taBortpersonalFranHatt.setText("Ta Bort Mig från Hatt");
        taBortpersonalFranHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taBortpersonalFranHattActionPerformed(evt);
            }
        });

        jButton1.setText("Hatt Sida");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personalTillHatt)
                            .addComponent(taBortpersonalFranHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(29, 29, 29))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(personalTillHatt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(taBortpersonalFranHatt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void personalTillHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalTillHattActionPerformed
        String komboId = orderLista.getSelectedValue();
        String personalId = personalIdLista.getSelectedValue();

        // Extrahera numeriskt kombo-ID genom att ta bort alla icke-numeriska tecken
       String intKomboId = komboId.replaceAll("[^0-9]", "");
    
        try {
            // Kontrollera om hatten är "ej tagen" innan personal tilldelas
            if(komboId.contains("ej tagen")){
            
            String uppdateraPersonal = "UPDATE hatt_i_order SET personal_ID = " + personalId + " WHERE kombo_ID = " + intKomboId + ";";
            String uppdateraStatus = "Update hatt_i_order Set Status = 'Påbörjad'";
            
            idb.update(uppdateraPersonal);
            idb.update(uppdateraStatus);
            
            System.out.println("Gått genom");
            
            // Uppdatera gränssnittet med den uppdaterade orderns lista
            orders = getOrderLista();
            DefaultListModel<String> orderListModel = new DefaultListModel<>();
            for (String order : orders) {
                orderListModel.addElement(order);
            }
            
            // Uppdatera JList med den nya listmodellen
            orderLista.setModel(orderListModel);
            }
            
            else{System.out.println("Hatten har redan en angiven personal");}
            
        } catch (InfException ex) {
            
            System.out.println(ex);
            System.out.println(intKomboId);
        }
    

    }//GEN-LAST:event_personalTillHattActionPerformed

      
    private void taBortpersonalFranHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taBortpersonalFranHattActionPerformed
        
        String valdPersonalId = personalIdLista.getSelectedValue();
        String intKomboId = orderLista.getSelectedValue().replaceAll("[^0-9]", "");
        
        String taBortPersonalQuery = "Update hatt_i_order Set Personal_ID = NULL Where Kombo_ID = " + intKomboId + ";";
        String uppdateraStatus = "Update hatt_i_order Set Status = 'Påbörjad'";
        
        try{
            
            String valdHatt = idb.fetchSingle("Select personal_ID from hatt_i_order where Kombo_ID = " + intKomboId);
           
            if(valdPersonalId.equals(valdHatt)){
            idb.update(taBortPersonalQuery);
            idb.update(uppdateraStatus);
            
            
             orders = getOrderLista();
            
            DefaultListModel<String> orderListModel = new DefaultListModel<>();
            for (String order : orders) {
                orderListModel.addElement(order);
            }
            
            // Set the updated model to the orderLista JList
            orderLista.setModel(orderListModel);
        
            System.out.println("Gått genom");
            }
            
            else{System.out.println("Du kan inte ta bort en annan personal");}
        }
        
        catch(InfException e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_taBortpersonalFranHattActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

private ArrayList<String> getPersonalIdLista(){
    
    ArrayList<String> personalIds = new ArrayList<>();
    
    try {
     personalIds = idb.fetchColumn("Select personal_ID from personal");
    }
    catch(InfException e){
        System.out.println(e);
    }
    
    return personalIds;

}    
    
 private ArrayList<String> getOrderLista(){
        
        
            ArrayList<String> ordersLista = new ArrayList<>();
        try {
             // Hämta rader från 'hatt_i_order' och bearbeta dem för att skapa en lista med orderdetaljer
            ArrayList<HashMap<String, String>> raderILista = idb.fetchRows("Select * from hatt_i_order order by order_id");
            int i = 0;
            
            //loopar genom ArrayListan "raderILista"
            for (HashMap<String, String> enRad : raderILista){
            String orderId = enRad.get("Order_ID");
            int orderInt = Integer.parseInt(orderId);
            
            String kombo_ID = enRad.get("Kombo_ID");
            
            String hattNamn = idb.fetchSingle("Select modell from hatt where produkt_id = " + enRad.get("Hatt_ID"));
           
            String personalNamn = idb.fetchSingle("Select förnamn from personal where personal_id = " + enRad.get("Personal_ID"));
            
            if(personalNamn == null){
            personalNamn = "ej tagen";
            }
            
            //kollar att orderID:t inte redan tillagd som en item till listan 
            if(orderInt>i){
            ordersLista.add("Order: " + orderId);
            i=orderInt;
            }    
            
            ordersLista.add("(" + kombo_ID + ")                         " + hattNamn + "       -       " + personalNamn);
            
            }
            
            
        
        } catch (InfException ex) {
            Logger.getLogger(PlaneringsYta.class.getName()).log(Level.SEVERE, null, ex);
        }
          
      return ordersLista;
      }

      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlaneringsYta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlaneringsYta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlaneringsYta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlaneringsYta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> orderLista;
    private javax.swing.JList<String> personalIdLista;
    private javax.swing.JButton personalTillHatt;
    private javax.swing.JButton taBortpersonalFranHatt;
    // End of variables declaration//GEN-END:variables
}

