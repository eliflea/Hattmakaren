/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package System;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author tomas
 */
public class PågåendeOrder extends javax.swing.JFrame {

        private InfDB idb;
        private String orderId;
    /**
     * Creates new form PågåendeOrder
     */
    public PågåendeOrder() {
            try {
                idb = new InfDB("hattmakarna", "3306", "hattmakarna", "team5key");
                orderId = "3";
                initComponents();
                fyllKostnad(orderId);
                fyllInfo(orderId);
                fyllLista(orderId);
                
            } catch (InfException ex) {
                Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        lblOrderNummer3 = new javax.swing.JLabel();
        lblVisaOrder = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listHattarIOrder = new javax.swing.JList<>();
        lblKund = new javax.swing.JLabel();
        lblKundNamn = new javax.swing.JLabel();
        btnTaBortHatt = new javax.swing.JButton();
        btnKostnadsFröslag = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSammanstallning = new javax.swing.JTextArea();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblOrderNummer3.setText("orderNR :");

        listHattarIOrder.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listHattarIOrder);

        lblKund.setText("Kund:");

        btnTaBortHatt.setText("Ta bort hatt");
        btnTaBortHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortHattActionPerformed(evt);
            }
        });

        btnKostnadsFröslag.setText("Skapa kostnadsförslag");
        btnKostnadsFröslag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKostnadsFröslagActionPerformed(evt);
            }
        });

        txtSammanstallning.setColumns(20);
        txtSammanstallning.setRows(5);
        jScrollPane2.setViewportView(txtSammanstallning);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKostnadsFröslag)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblOrderNummer3)
                                .addGap(18, 18, 18)
                                .addComponent(lblVisaOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(84, 84, 84))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblKund, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblKundNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnTaBortHatt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrderNummer3)
                    .addComponent(lblVisaOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKund)
                    .addComponent(lblKundNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btnTaBortHatt)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnKostnadsFröslag)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 465, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTaBortHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortHattActionPerformed

            try {
                int indexValdHatt = listHattarIOrder.getSelectedIndex()+1;
                String komboId = idb.fetchSingle("SELECT kombo_id FROM (SELECT kombo_id, ROW_NUMBER() OVER (ORDER BY kombo_id) as rownum FROM hatt_i_order where Order_ID = " +orderId+ " ) AS numbered_rows WHERE rownum = " +indexValdHatt );
                idb.delete("delete from hatt_i_order where Kombo_ID = "+komboId);
                fyllLista(orderId);
                txtSammanstallning.setText(sammanStallning(orderId));
            } catch (InfException ex) {
                Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
            }

    }//GEN-LAST:event_btnTaBortHattActionPerformed

    private void btnKostnadsFröslagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKostnadsFröslagActionPerformed
        txtSammanstallning.setText("Hej " + lblKundNamn.getText() + "! \n" + "Vi återkommer gällande din order. Vi har tagit fram ett kostnadsförslag enligt nedan \n" +sammanStallning(orderId)+ "\n Återkom via mail eller telefon för att bekräfta ordern. \n Med vänliga hälsningar, Ottos Hattmakeri");
        
    }//GEN-LAST:event_btnKostnadsFröslagActionPerformed

    
    private void fyllInfo(String orderId){
      
        String förnamn;
            try {
                förnamn = idb.fetchSingle("Select Förnamn from Kund where Kund_ID = (Select Kund from Orders where Order_ID = " + orderId + ")");
            String efternamn = idb.fetchSingle("Select Efternamn from Kund where Kund_ID = (Select Kund from Orders where Order_ID = " + orderId + ")");
            String namn = förnamn + " " + efternamn;
            
            lblVisaOrder.setText(orderId);
            
            lblKundNamn.setText(namn);
            
            } catch (InfException ex) {
                Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    
    
    }
    private void fyllKostnad(String orderId)
    {
        
        txtSammanstallning.setText(sammanStallning(orderId));
    }
    
    private void fyllLista(String orderId){
    
            try {
                
                DefaultListModel<String> listModel = new DefaultListModel<>();
                 listHattarIOrder.setModel(listModel);
               
                ArrayList<HashMap<String, String>> listaHattar = idb.fetchRows("SELECT  kombo_id, modell, pris FROM hatt_i_order JOIN hatt ON hatt_i_order.hatt_id = hatt.produkt_id WHERE Order_ID = " +orderId+ " order by kombo_id");
                for (HashMap<String, String> enHatt : listaHattar){
                String rad = "Modell: " + enHatt.get("Modell") + "      " + "Pris: " +enHatt.get("Pris");
                listModel.addElement(rad);
                }
            } catch (InfException ex) {
                Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    private String sammanStallning(String orderId){
    
            String kostnadsforslag = "";
      
            try {
                double hattSumma = 0;
                ArrayList<String> listaHattPriser = idb.fetchColumn("select hatt.pris from hatt join hatt_i_order hio on hatt.Produkt_ID = hio.Hatt_ID join orders on hio.Order_ID = orders.Order_ID where hio.Order_ID = 3");
                for(String enHatt : listaHattPriser){
                double pris = Double.parseDouble(enHatt);
                hattSumma = hattSumma + pris;            
                }
                String bradskande = idb.fetchSingle("Select brådskande from orders where order_id ="+orderId);
                double tillagg = 0;
                if(bradskande.equals("1")){
                 tillagg = hattSumma*0.2;
                }
                
                double moms =Math.round((hattSumma+tillagg)*0.25* 100.0) / 100.0;
                double totalSummaMoms = Math.round(hattSumma*1.25 * 100.0) / 100.0;
                hattSumma = Math.round(hattSumma * 100.0) / 100.0;
                kostnadsforslag = "Pris: " + hattSumma + " \n" + "Tillägg: " + tillagg + " \n" +
                        "Moms: " + moms + " \n" +
                        "Totalsumma (ink. Moms): " + totalSummaMoms;                
              
            } catch (InfException ex) {
                Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
            return kostnadsforslag;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PågåendeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PågåendeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PågåendeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PågåendeOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PågåendeOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKostnadsFröslag;
    private javax.swing.JButton btnTaBortHatt;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblKund;
    private javax.swing.JLabel lblKundNamn;
    private javax.swing.JLabel lblOrderNummer3;
    private javax.swing.JLabel lblVisaOrder;
    private javax.swing.JList<String> listHattarIOrder;
    private javax.swing.JTextArea txtSammanstallning;
    // End of variables declaration//GEN-END:variables
}
