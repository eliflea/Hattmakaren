/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package System;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author sarah
 */
public class PåbörjadOrderPanel extends javax.swing.JPanel {
    private InfDB idb;

    /**
     * Creates new form PåbörjadOrderPanel
     */
    public PåbörjadOrderPanel() throws InfException {
        initComponents();
        idb = new InfDB("hattmakarna", "3306", "hattmakarna", "team5key");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listPaborjadeOrdrar = new javax.swing.JList<>();
        lblPaborjadOrder = new javax.swing.JLabel();
        btnValjOrder = new javax.swing.JButton();

        listPaborjadeOrdrar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listPaborjadeOrdrar);

        lblPaborjadOrder.setText("Påbörjade ordrar");

        btnValjOrder.setText("Välj");
        btnValjOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaborjadOrder)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnValjOrder)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnValjOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(lblPaborjadOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnValjOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnValjOrderActionPerformed

    private void fyllOrderLista() throws InfException {
        DefaultListModel<String> listModel = new DefaultListModel<>();
        listPaborjadeOrdrar.setModel(listModel);

        ArrayList<HashMap<String, String>> paborjadList = idb.fetchRows("Select * from orders where Totalsumma is null or Brådskande is null or Status is null or Datum is null or fraktsedel is null or kommentar is null");
        for (HashMap<String, String> orderRad : paborjadList) {
    StringBuilder radTextBuilder = new StringBuilder(); // StringBuilder for efficient string concatenation
    ArrayList<String> columnsForRow = new ArrayList<>(orderRad.keySet()); // List of column names for the current row
    for (String kolumn : columnsForRow) {
        String varde = orderRad.get(kolumn);
        if (varde == null) {
            varde = "ej angivet";
        }
        String columnValuePair = kolumn + ": " + varde + " | "; // Build string for each key-value pair
        radTextBuilder.append(columnValuePair); // Append to StringBuilder
    }
    String radText = radTextBuilder.toString().trim(); // Trim extra spaces and add to list model
    listModel.addElement(radText);
}}
    
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValjOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPaborjadOrder;
    private javax.swing.JList<String> listPaborjadeOrdrar;
    // End of variables declaration//GEN-END:variables
}
