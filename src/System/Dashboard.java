package System;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.PrintJob;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import net.sourceforge.barbecue.Barcode;
import net.sourceforge.barbecue.BarcodeFactory;
import net.sourceforge.barbecue.BarcodeImageHandler;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author leyla
 */
public class Dashboard extends javax.swing.JFrame {

    private InfDB idb;
    private ArrayList<String> orders;
    private ArrayList<String> personalId;
    private String persId;

    /**
     * Creates new form test
     */
    public Dashboard(InfDB idb, String personalId) {
        this.idb = idb;
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        orders = getOrderLista();
        persId = personalId;
        this.personalId = getPersonalIdLista();
        initComponents();
        getContentPane().setBackground(new java.awt.Color(200, 200, 200));
        fyllOrderLista2();
        fyllPersonalEpost();
        fyllEpost();
        AutoCompleteDecorator.decorate(cbKundEpost);
        AutoCompleteDecorator.decorate(cbAndraFyllEpost);
        AutoCompleteDecorator.decorate(cbValjKundEpost);
        AutoCompleteDecorator.decorate(cbValjKundEpost2);
        AutoCompleteDecorator.decorate(cbTaBortPersonal);
        AutoCompleteDecorator.decorate(cbRedigeraPersonal);
        //   fyllBoxOrder1();
        fyllRullLista();
        fyllAr();
        fyllTextrutaMedBestallningshistorik();
        fyllBoxOrder2();
        listHatt();
        listHattSpecial();
        fyllBoxOrder4();
        fyllBoxOrderKund();
        fyllBoxKundEmail();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSideBarVanster = new javax.swing.JPanel();
        lblTest = new javax.swing.JLabel();
        lblTest1 = new javax.swing.JLabel();
        btnOrdersida = new javax.swing.JButton();
        btnKund = new javax.swing.JButton();
        btnHattar = new javax.swing.JButton();
        btnSkapaOrder = new javax.swing.JButton();
        btnValjHatt = new javax.swing.JButton();
        btnLoggaUt = new javax.swing.JButton();
        btnStartsida = new javax.swing.JButton();
        lblNuvarandeAnvandare = new javax.swing.JLabel();
        btnVisaMaterialinfo = new javax.swing.JButton();
        btnPaketinformation = new javax.swing.JButton();
        btnProduktdetaljer = new javax.swing.JButton();
        btnPersonalsida = new javax.swing.JButton();
        btnStatistik = new javax.swing.JButton();
        pnlMitten = new javax.swing.JPanel();
        pnlStartsida = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listPaborjadeOrdrar = new javax.swing.JList<>();
        lblPaborjadOrder = new javax.swing.JLabel();
        btnValjOrder = new javax.swing.JButton();
        lblStartSida = new javax.swing.JLabel();
        lblBild = new javax.swing.JLabel();
        pnlOrdersida = new javax.swing.JPanel();
        lblRubtikTotalSumma = new javax.swing.JLabel();
        txtTotalSumma = new javax.swing.JTextField();
        btnOrderTotalsumma = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        pnlFraktSedel1 = new javax.swing.JPanel();
        lblTo1 = new javax.swing.JLabel();
        lblPhone1 = new javax.swing.JLabel();
        lblFrom1 = new javax.swing.JLabel();
        lblAdress1 = new javax.swing.JLabel();
        lblKundNamn1 = new javax.swing.JLabel();
        lblPhoneTo1 = new javax.swing.JLabel();
        lblOrderNumber1 = new javax.swing.JLabel();
        lblPayCustoms1 = new javax.swing.JLabel();
        lblLogoFrakt1 = new javax.swing.JLabel();
        lblFromWho1 = new javax.swing.JLabel();
        lblBarcode1 = new javax.swing.JLabel();
        lblKundAdress1 = new javax.swing.JLabel();
        lblForNamn1 = new javax.swing.JLabel();
        lblRubrikOrder1 = new javax.swing.JLabel();
        lblSkrivIn = new javax.swing.JLabel();
        cbOrder2 = new javax.swing.JComboBox<>();
        lblOrdersida = new javax.swing.JLabel();
        lblRubrikLaggTIllOrder1 = new javax.swing.JLabel();
        btnOrderStatus = new javax.swing.JButton();
        cbOrderValj3 = new javax.swing.JComboBox<>();
        cbStatus = new javax.swing.JComboBox<>();
        btnSkapaFraktSedel = new javax.swing.JButton();
        btnVisaFraktSedel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnOrderStatus1 = new javax.swing.JButton();
        lblOrderSidaMeddelande = new javax.swing.JLabel();
        cbOrder4 = new javax.swing.JComboBox<>();
        lblAndraStatus = new javax.swing.JLabel();
        pnlPersonalsida = new javax.swing.JPanel();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        pnlRedigeraPersonal4 = new javax.swing.JPanel();
        lblPersonalFornamn4 = new javax.swing.JLabel();
        txtRedigeraPersonalEpost = new javax.swing.JTextField();
        lblPersonalLosenord4 = new javax.swing.JLabel();
        btnRedigeraPersonal = new javax.swing.JButton();
        lblPersonalEpost4 = new javax.swing.JLabel();
        lblRedigeraPersonalMeddelande = new javax.swing.JLabel();
        lblRedigeraPersonalValj4 = new javax.swing.JLabel();
        txtRedigeraPersonalFornamn = new javax.swing.JTextField();
        txtRedigeraPersonalEfternamn = new javax.swing.JTextField();
        lblPersonalEfternamn4 = new javax.swing.JLabel();
        cbRedigeraPersonal = new javax.swing.JComboBox<>();
        lblRedigeraPersonal4 = new javax.swing.JLabel();
        pwdRedigeraPersonalLosenord = new javax.swing.JPasswordField();
        pnlTaBortPersonal = new javax.swing.JPanel();
        cbTaBortPersonal = new javax.swing.JComboBox<>();
        lblTaBortEnPersonal = new javax.swing.JLabel();
        lblTaBortPersonalMeddelande = new javax.swing.JLabel();
        btnTaBortPersonal = new javax.swing.JButton();
        lblTaBortPersonal = new javax.swing.JLabel();
        lblTaBortPersonalEpost = new javax.swing.JLabel();
        pnlHattar = new javax.swing.JPanel();
        lblAngeModell = new javax.swing.JLabel();
        lblSkapaHatt = new javax.swing.JLabel();
        btnSpara = new javax.swing.JButton();
        txtAngeNamn = new javax.swing.JTextField();
        lblAngeNamn = new javax.swing.JLabel();
        txtAngePris = new javax.swing.JTextField();
        cbValjModell = new javax.swing.JComboBox<>();
        lblAngePris = new javax.swing.JLabel();
        lblValjTyp = new javax.swing.JLabel();
        lblSkapaHattMeddelande = new javax.swing.JLabel();
        cbValjTyp1 = new javax.swing.JComboBox<>();
        cbValjMaterialVidSkapa = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        pnlSkapaOrder = new javax.swing.JPanel();
        cbValjPrioritering = new javax.swing.JComboBox<>();
        btnSparaOrder = new javax.swing.JButton();
        lblRubrikPrioritering = new javax.swing.JLabel();
        lblRubrikOrder = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbValjStatus = new javax.swing.JComboBox<>();
        lblRubrikKund = new javax.swing.JLabel();
        cbValjKund = new javax.swing.JComboBox<>();
        lblRubrikDatum = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        lblRubrikDatum1 = new javax.swing.JLabel();
        txtKommentar1 = new javax.swing.JTextField();
        lblFel = new javax.swing.JLabel();
        btnSparaOrder2 = new javax.swing.JButton();
        lblOrderNummer2 = new javax.swing.JLabel();
        lblOrderNummer = new javax.swing.JLabel();
        lblKundNamn = new javax.swing.JLabel();
        lblSparat = new javax.swing.JLabel();
        pnlValjHatt = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        label1 = new java.awt.Label();
        jScrollPane5 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        list2 = new javax.swing.JList<>();
        btnOk = new javax.swing.JButton();
        lblRubrikLaggTIllOrder = new javax.swing.JLabel();
        cbOrder = new javax.swing.JComboBox<>();
        cbValjAllaHattar = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbValjMaterial = new javax.swing.JComboBox<>();
        lblValjHattMeddelande = new javax.swing.JLabel();
        txtAngeStorlek = new javax.swing.JTextField();
        lblStorlek = new javax.swing.JLabel();
        txtAngeTxt = new javax.swing.JTextField();
        lblStorlek1 = new javax.swing.JLabel();
        pnlStatistik = new javax.swing.JPanel();
        btnManad = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtStatistik = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        cbAr = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbManad = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        cbKvartal = new javax.swing.JComboBox<>();
        btnAr = new javax.swing.JButton();
        btnKvartal = new javax.swing.JButton();
        pnlKund = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlSkapaKund = new javax.swing.JPanel();
        txtPostnummer1 = new javax.swing.JTextField();
        lblEfternamn1 = new javax.swing.JLabel();
        txtOrt1 = new javax.swing.JTextField();
        lblEpost1 = new javax.swing.JLabel();
        txtTelefon1 = new javax.swing.JTextField();
        lblGatuadress1 = new javax.swing.JLabel();
        btnSparaKund = new javax.swing.JButton();
        lblPostnummer1 = new javax.swing.JLabel();
        lblOrt1 = new javax.swing.JLabel();
        lblTelefon1 = new javax.swing.JLabel();
        txtFornamn1 = new javax.swing.JTextField();
        txtEfternamn1 = new javax.swing.JTextField();
        txtEpost1 = new javax.swing.JTextField();
        txtGatuadress1 = new javax.swing.JTextField();
        lblFornamn1 = new javax.swing.JLabel();
        lblSkapaKundMeddelande = new javax.swing.JLabel();
        lblSkapaKund = new javax.swing.JLabel();
        pnlTaBortKund = new javax.swing.JPanel();
        lblTaBortEpost = new javax.swing.JLabel();
        lblTaBortAngeEpost = new javax.swing.JLabel();
        btnTaBortKund = new javax.swing.JButton();
        lblTaBortMeddelande = new javax.swing.JLabel();
        lblTaBortKund = new javax.swing.JLabel();
        cbKundEpost = new javax.swing.JComboBox<>();
        pnlRedigeraKund = new javax.swing.JPanel();
        lblFornamn = new javax.swing.JLabel();
        txtTelefon = new javax.swing.JTextField();
        txtPostnummer = new javax.swing.JTextField();
        lblGatuadress = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnRedigeraKund1 = new javax.swing.JButton();
        txtKommentar = new javax.swing.JTextField();
        lblPostnummer = new javax.swing.JLabel();
        lblAndraKundMeddelande = new javax.swing.JLabel();
        lblOrt = new javax.swing.JLabel();
        lblAngeEpost = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        txtFornamn = new javax.swing.JTextField();
        txtEfternamn = new javax.swing.JTextField();
        lblEfternamn = new javax.swing.JLabel();
        txtOrt = new javax.swing.JTextField();
        txtGatuadress = new javax.swing.JTextField();
        lblEpost = new javax.swing.JLabel();
        cbAndraFyllEpost = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        pnlLagerforHatt = new javax.swing.JPanel();
        lblValjKund1 = new javax.swing.JLabel();
        cbValjKundEpost2 = new javax.swing.JComboBox<>();
        lblValjHatt1 = new javax.swing.JLabel();
        cbValjKundHatt1 = new javax.swing.JComboBox<>();
        btnOk3 = new javax.swing.JButton();
        lblLagerforaHattMsg = new javax.swing.JLabel();
        lblLagerforHatten1 = new javax.swing.JLabel();
        pnlBestallningshistorik = new javax.swing.JPanel();
        cbValjKundEpost = new javax.swing.JComboBox<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        jtxtBestallningsHistorik = new javax.swing.JTextArea();
        pnlVisaMaterial = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMaterial = new javax.swing.JTable();
        pnlPaketinfo = new javax.swing.JPanel();
        lblHojd2 = new javax.swing.JLabel();
        txtAngeFraktkostnad = new javax.swing.JTextField();
        txtAngeLangd = new javax.swing.JTextField();
        txtAngeVikt = new javax.swing.JTextField();
        lblAngeLangd = new javax.swing.JLabel();
        lblVikt = new javax.swing.JLabel();
        cbOrder3 = new javax.swing.JComboBox<>();
        lblRubrikLaggTIllOrder2 = new javax.swing.JLabel();
        btnSparaPaket = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblHojd1 = new javax.swing.JLabel();
        txtAngeHojd = new javax.swing.JTextField();
        txtAngeBredd = new javax.swing.JTextField();
        lblHojd = new javax.swing.JLabel();
        lblVisaPaketInformationRubrik = new javax.swing.JLabel();
        lblPaketInfoMeddelande = new javax.swing.JLabel();
        pnlProduktdetaljer = new javax.swing.JPanel();
        lblAndraProduktdetalj = new javax.swing.JLabel();
        txtProduktdetaljPris = new javax.swing.JTextField();
        txtProduktdetaljNamn = new javax.swing.JTextField();
        txtProduktdetaljModell = new javax.swing.JTextField();
        lblNamn = new javax.swing.JLabel();
        lblProduktdetaljModell = new javax.swing.JLabel();
        lblProduktdetaljPris = new javax.swing.JLabel();
        lblProduktdetaljGodkand = new javax.swing.JLabel();
        cbProduktDetaljGodkand = new javax.swing.JComboBox<>();
        btnAndraProduktdetalj = new javax.swing.JButton();
        lblAndraProduktdetaljMeddelande = new javax.swing.JLabel();
        cbProduktdetaljHatt = new javax.swing.JComboBox<>();
        lblProduktdetaljHatt = new javax.swing.JLabel();
        pnlSideBarHoger = new javax.swing.JPanel();
        pnlPlaneringsYta = new javax.swing.JPanel();
        personalTillHatt = new javax.swing.JButton();
        btnHattSida = new javax.swing.JButton();
        planeringsLista = new javax.swing.JScrollPane();
        orderLista = new javax.swing.JList<>();
        taBortpersonalFranHatt = new javax.swing.JButton();
        lblError = new javax.swing.JLabel();
        pnlPagaendeOrdern = new javax.swing.JPanel();
        lblOrderNummer3 = new javax.swing.JLabel();
        lblVisaOrder = new javax.swing.JLabel();
        btnKostnadsFröslag = new javax.swing.JButton();
        lblKund = new javax.swing.JLabel();
        lblKundNamn2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtSammanstallning = new javax.swing.JTextArea();
        btnTaBortHatt = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        listHattarIOrder = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));

        pnlSideBarVanster.setBackground(new java.awt.Color(255, 255, 255));

        lblTest.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 20)); // NOI18N
        lblTest.setForeground(new java.awt.Color(153, 153, 153));
        lblTest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTest.setText("Hattmakeriet");

        lblTest1.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 18)); // NOI18N
        lblTest1.setForeground(new java.awt.Color(153, 153, 153));
        lblTest1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTest1.setText("Personal");

        btnOrdersida.setBackground(new java.awt.Color(153, 153, 153));
        btnOrdersida.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnOrdersida.setForeground(new java.awt.Color(255, 255, 255));
        btnOrdersida.setText("Ordersida");
        btnOrdersida.setBorder(null);
        btnOrdersida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdersidaActionPerformed(evt);
            }
        });

        btnKund.setBackground(new java.awt.Color(153, 153, 153));
        btnKund.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnKund.setForeground(new java.awt.Color(255, 255, 255));
        btnKund.setText("Kund");
        btnKund.setBorder(null);
        btnKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKundActionPerformed(evt);
            }
        });

        btnHattar.setBackground(new java.awt.Color(153, 153, 153));
        btnHattar.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnHattar.setForeground(new java.awt.Color(255, 255, 255));
        btnHattar.setText("Skapa hatt");
        btnHattar.setBorder(null);
        btnHattar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHattarActionPerformed(evt);
            }
        });

        btnSkapaOrder.setBackground(new java.awt.Color(153, 153, 153));
        btnSkapaOrder.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnSkapaOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnSkapaOrder.setText("Skapa order");
        btnSkapaOrder.setBorder(null);
        btnSkapaOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaOrderActionPerformed(evt);
            }
        });

        btnValjHatt.setBackground(new java.awt.Color(153, 153, 153));
        btnValjHatt.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnValjHatt.setForeground(new java.awt.Color(255, 255, 255));
        btnValjHatt.setText("Välj hatt");
        btnValjHatt.setBorder(null);
        btnValjHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjHattActionPerformed(evt);
            }
        });

        btnLoggaUt.setBackground(new java.awt.Color(94, 157, 157));
        btnLoggaUt.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 14)); // NOI18N
        btnLoggaUt.setForeground(new java.awt.Color(255, 255, 255));
        btnLoggaUt.setText("Logga ut");
        btnLoggaUt.setBorder(null);
        btnLoggaUt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoggaUtActionPerformed(evt);
            }
        });

        btnStartsida.setBackground(new java.awt.Color(102, 102, 102));
        btnStartsida.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnStartsida.setForeground(new java.awt.Color(255, 255, 255));
        btnStartsida.setText("Startsida");
        btnStartsida.setBorder(null);
        btnStartsida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartsidaActionPerformed(evt);
            }
        });

        lblNuvarandeAnvandare.setForeground(new java.awt.Color(0, 102, 0));

        btnVisaMaterialinfo.setBackground(new java.awt.Color(153, 153, 153));
        btnVisaMaterialinfo.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnVisaMaterialinfo.setForeground(new java.awt.Color(255, 255, 255));
        btnVisaMaterialinfo.setText("Visa materialinfo");
        btnVisaMaterialinfo.setBorder(null);
        btnVisaMaterialinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaMaterialinfoActionPerformed(evt);
            }
        });

        btnPaketinformation.setBackground(new java.awt.Color(153, 153, 153));
        btnPaketinformation.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnPaketinformation.setForeground(new java.awt.Color(255, 255, 255));
        btnPaketinformation.setText("Paketinformation");
        btnPaketinformation.setBorder(null);
        btnPaketinformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaketinformationActionPerformed(evt);
            }
        });

        btnProduktdetaljer.setBackground(new java.awt.Color(153, 153, 153));
        btnProduktdetaljer.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnProduktdetaljer.setForeground(new java.awt.Color(255, 255, 255));
        btnProduktdetaljer.setText("Produktdetaljer");
        btnProduktdetaljer.setBorder(null);
        btnProduktdetaljer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProduktdetaljerActionPerformed(evt);
            }
        });

        btnPersonalsida.setBackground(new java.awt.Color(153, 153, 153));
        btnPersonalsida.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnPersonalsida.setForeground(new java.awt.Color(255, 255, 255));
        btnPersonalsida.setText("Personal");
        btnPersonalsida.setBorder(null);
        btnPersonalsida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPersonalsidaActionPerformed(evt);
            }
        });

        btnStatistik.setBackground(new java.awt.Color(153, 153, 153));
        btnStatistik.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 14)); // NOI18N
        btnStatistik.setForeground(new java.awt.Color(255, 255, 255));
        btnStatistik.setText("Statistik");
        btnStatistik.setBorder(null);
        btnStatistik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatistikActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSideBarVansterLayout = new javax.swing.GroupLayout(pnlSideBarVanster);
        pnlSideBarVanster.setLayout(pnlSideBarVansterLayout);
        pnlSideBarVansterLayout.setHorizontalGroup(
            pnlSideBarVansterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                .addGroup(pnlSideBarVansterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblTest1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNuvarandeAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(lblTest)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                .addGroup(pnlSideBarVansterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnKund, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(btnPersonalsida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHattar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSkapaOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(btnValjHatt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOrdersida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPaketinformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnProduktdetaljer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVisaMaterialinfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStatistik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStartsida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLoggaUt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlSideBarVansterLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHattar, btnKund, btnOrdersida, btnPaketinformation, btnPersonalsida, btnProduktdetaljer, btnSkapaOrder, btnStartsida, btnStatistik, btnValjHatt, btnVisaMaterialinfo});

        pnlSideBarVansterLayout.setVerticalGroup(
            pnlSideBarVansterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(pnlSideBarVansterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNuvarandeAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSideBarVansterLayout.createSequentialGroup()
                        .addComponent(lblTest, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTest1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(btnStartsida, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnKund, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPersonalsida, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHattar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSkapaOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnValjHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOrdersida, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPaketinformation, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProduktdetaljer, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVisaMaterialinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStatistik, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLoggaUt, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pnlMitten.setBackground(new java.awt.Color(255, 255, 255));
        pnlMitten.setLayout(new java.awt.CardLayout());

        pnlStartsida.setBackground(new java.awt.Color(251, 251, 243));

        listPaborjadeOrdrar.setBackground(new java.awt.Color(204, 204, 204));
        listPaborjadeOrdrar.setBorder(null);
        listPaborjadeOrdrar.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        listPaborjadeOrdrar.setForeground(new java.awt.Color(51, 51, 51));
        listPaborjadeOrdrar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listPaborjadeOrdrar);

        lblPaborjadOrder.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 18)); // NOI18N
        lblPaborjadOrder.setForeground(new java.awt.Color(153, 153, 153));
        lblPaborjadOrder.setText("Påbörjade ordrar");

        btnValjOrder.setBackground(new java.awt.Color(0, 102, 153));
        btnValjOrder.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        btnValjOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnValjOrder.setText("Välj");
        btnValjOrder.setBorder(null);
        btnValjOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjOrderActionPerformed(evt);
            }
        });

        lblStartSida.setFont(new java.awt.Font("Microsoft YaHei Light", 1, 48)); // NOI18N
        lblStartSida.setForeground(new java.awt.Color(153, 153, 153));
        lblStartSida.setText("Ottos hattmakeri");

        lblBild.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Bild/otto.png"))); // NOI18N

        javax.swing.GroupLayout pnlStartsidaLayout = new javax.swing.GroupLayout(pnlStartsida);
        pnlStartsida.setLayout(pnlStartsidaLayout);
        pnlStartsidaLayout.setHorizontalGroup(
            pnlStartsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartsidaLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlStartsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStartsidaLayout.createSequentialGroup()
                        .addGroup(pnlStartsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPaborjadOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnValjOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlStartsidaLayout.createSequentialGroup()
                        .addComponent(lblStartSida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBild, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        pnlStartsidaLayout.setVerticalGroup(
            pnlStartsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStartsidaLayout.createSequentialGroup()
                .addGroup(pnlStartsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStartsidaLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(lblStartSida, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlStartsidaLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblBild, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPaborjadOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnValjOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlStartsida, "card4");

        pnlOrdersida.setBackground(new java.awt.Color(51, 51, 51));

        lblRubtikTotalSumma.setForeground(new java.awt.Color(255, 255, 255));
        lblRubtikTotalSumma.setText("Totalsumma (inkl. Frakt)");

        btnOrderTotalsumma.setBackground(new java.awt.Color(102, 102, 102));
        btnOrderTotalsumma.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderTotalsumma.setText("Visa orderns totalsumma");
        btnOrderTotalsumma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderTotalsummaActionPerformed(evt);
            }
        });

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        pnlFraktSedel1.setBackground(new java.awt.Color(255, 255, 255));

        lblTo1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblTo1.setText("To:");

        lblPhone1.setText("Phone: ");

        lblFrom1.setText("Ottos hattmakeri");

        lblAdress1.setText("Hattmästargatan 99");

        lblPhoneTo1.setText("Phone: +46 73 8554121");

        lblOrderNumber1.setText("Ordernumber:");

        lblPayCustoms1.setText("Pay Customs:");

        lblLogoFrakt1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLogoFrakt1.setText("DOMESTIC SWEDEN                                                              ÖruNord");

        lblFromWho1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFromWho1.setText("From:");

        javax.swing.GroupLayout pnlFraktSedel1Layout = new javax.swing.GroupLayout(pnlFraktSedel1);
        pnlFraktSedel1.setLayout(pnlFraktSedel1Layout);
        pnlFraktSedel1Layout.setHorizontalGroup(
            pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFraktSedel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblBarcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblFromWho1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTo1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPhoneTo1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
            .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFrom1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAdress1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogoFrakt1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKundNamn1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPayCustoms1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOrderNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblKundAdress1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblForNamn1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlFraktSedel1Layout.setVerticalGroup(
            pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFraktSedel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblLogoFrakt1)
                .addGap(50, 50, 50)
                .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFromWho1)
                    .addComponent(lblPhoneTo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFrom1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdress1)
                .addGap(51, 51, 51)
                .addGroup(pnlFraktSedel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTo1)
                    .addComponent(lblPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblForNamn1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lblKundNamn1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblKundAdress1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOrderNumber1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPayCustoms1)
                .addGap(60, 60, 60)
                .addComponent(lblBarcode1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFraktSedel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFraktSedel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblRubrikOrder1.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikOrder1.setText("Välj order att skapa totalsumma för:");

        lblSkrivIn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblSkrivIn.setForeground(new java.awt.Color(255, 255, 255));
        lblSkrivIn.setText("Välj ordernummer:");

        lblOrdersida.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblOrdersida.setForeground(new java.awt.Color(255, 255, 255));
        lblOrdersida.setText("Ordersida");

        lblRubrikLaggTIllOrder1.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikLaggTIllOrder1.setText("Order att ändra:");

        btnOrderStatus.setBackground(new java.awt.Color(102, 102, 102));
        btnOrderStatus.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderStatus.setText("Se status");
        btnOrderStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderStatusActionPerformed(evt);
            }
        });

        cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Redo", "Påbörjad", "Avslutad" }));

        btnSkapaFraktSedel.setBackground(new java.awt.Color(102, 102, 102));
        btnSkapaFraktSedel.setForeground(new java.awt.Color(255, 255, 255));
        btnSkapaFraktSedel.setText("Skapa fraktsedel");
        btnSkapaFraktSedel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaFraktSedelActionPerformed(evt);
            }
        });

        btnVisaFraktSedel.setBackground(new java.awt.Color(102, 102, 102));
        btnVisaFraktSedel.setForeground(new java.awt.Color(255, 255, 255));
        btnVisaFraktSedel.setText("Visa fraktsedel");
        btnVisaFraktSedel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisaFraktSedelActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Välj status att ändra ordern till:");

        btnOrderStatus1.setBackground(new java.awt.Color(102, 102, 102));
        btnOrderStatus1.setForeground(new java.awt.Color(255, 255, 255));
        btnOrderStatus1.setText("Ändra status");
        btnOrderStatus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderStatus1ActionPerformed(evt);
            }
        });

        lblOrderSidaMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblOrderSidaMeddelande.setForeground(new java.awt.Color(153, 0, 0));

        lblAndraStatus.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlOrdersidaLayout = new javax.swing.GroupLayout(pnlOrdersida);
        pnlOrdersida.setLayout(pnlOrdersidaLayout);
        pnlOrdersidaLayout.setHorizontalGroup(
            pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                        .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnVisaFraktSedel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnOrderStatus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                .addGap(0, 11, Short.MAX_VALUE)
                                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlOrdersidaLayout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlOrdersidaLayout.createSequentialGroup()
                                            .addComponent(lblSkrivIn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(cbOrderValj3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(lblOrdersida, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                        .addComponent(lblRubrikLaggTIllOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbOrder4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6))))
                            .addComponent(btnSkapaFraktSedel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                .addComponent(lblAndraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOrderStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOrdersidaLayout.createSequentialGroup()
                        .addComponent(lblOrderSidaMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                        .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                .addComponent(lblRubtikTotalSumma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTotalSumma, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                .addComponent(lblRubrikOrder1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbOrder2, 0, 124, Short.MAX_VALUE))
                            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                                .addComponent(btnOrderTotalsumma)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        pnlOrdersidaLayout.setVerticalGroup(
            pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                .addContainerGap(103, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(141, 141, 141))
            .addGroup(pnlOrdersidaLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lblOrdersida)
                .addGap(21, 21, 21)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSkrivIn)
                    .addComponent(cbOrderValj3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(btnVisaFraktSedel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSkapaFraktSedel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOrderStatus)
                .addGap(21, 21, 21)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRubrikLaggTIllOrder1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOrder4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOrderStatus1)
                    .addComponent(lblAndraStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRubrikOrder1)
                    .addComponent(cbOrder2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlOrdersidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotalSumma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRubtikTotalSumma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOrderTotalsumma)
                .addGap(35, 35, 35)
                .addComponent(lblOrderSidaMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlOrdersida, "card4");

        pnlPersonalsida.setBackground(new java.awt.Color(102, 102, 102));

        jTabbedPane5.setPreferredSize(new java.awt.Dimension(791, 800));

        pnlRedigeraPersonal4.setBackground(new java.awt.Color(255, 255, 255));

        lblPersonalFornamn4.setForeground(new java.awt.Color(102, 102, 102));
        lblPersonalFornamn4.setText("Förnamn:");

        txtRedigeraPersonalEpost.setBackground(new java.awt.Color(153, 153, 153));

        lblPersonalLosenord4.setForeground(new java.awt.Color(102, 102, 102));
        lblPersonalLosenord4.setText("Lösenord:");

        btnRedigeraPersonal.setBackground(new java.awt.Color(0, 102, 153));
        btnRedigeraPersonal.setForeground(new java.awt.Color(255, 255, 255));
        btnRedigeraPersonal.setText("Redigera personal");
        btnRedigeraPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedigeraPersonalActionPerformed(evt);
            }
        });

        lblPersonalEpost4.setForeground(new java.awt.Color(102, 102, 102));
        lblPersonalEpost4.setText("Nytt epost:");

        lblRedigeraPersonalMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        lblRedigeraPersonalValj4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRedigeraPersonalValj4.setForeground(new java.awt.Color(102, 102, 102));
        lblRedigeraPersonalValj4.setText("Välj epost för personal som ska redigeras:");

        txtRedigeraPersonalFornamn.setBackground(new java.awt.Color(153, 153, 153));
        txtRedigeraPersonalFornamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRedigeraPersonalFornamnActionPerformed(evt);
            }
        });

        txtRedigeraPersonalEfternamn.setBackground(new java.awt.Color(153, 153, 153));

        lblPersonalEfternamn4.setForeground(new java.awt.Color(102, 102, 102));
        lblPersonalEfternamn4.setText("Efternamn:");

        lblRedigeraPersonal4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblRedigeraPersonal4.setForeground(new java.awt.Color(102, 102, 102));
        lblRedigeraPersonal4.setText("Redigera personal");

        pwdRedigeraPersonalLosenord.setBackground(new java.awt.Color(153, 153, 153));
        pwdRedigeraPersonalLosenord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdRedigeraPersonalLosenordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRedigeraPersonal4Layout = new javax.swing.GroupLayout(pnlRedigeraPersonal4);
        pnlRedigeraPersonal4.setLayout(pnlRedigeraPersonal4Layout);
        pnlRedigeraPersonal4Layout.setHorizontalGroup(
            pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                        .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRedigeraPersonal4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                            .addComponent(lblRedigeraPersonalValj4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRedigeraPersonalMeddelande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRedigeraPersonal4Layout.createSequentialGroup()
                                        .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblPersonalFornamn4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPersonalEfternamn4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPersonalLosenord4, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPersonalEpost4, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(81, 81, 81)))
                        .addGap(133, 133, 133))
                    .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                        .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRedigeraPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtRedigeraPersonalFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbRedigeraPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRedigeraPersonalEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pwdRedigeraPersonalLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                                    .addGap(81, 81, 81)
                                    .addComponent(txtRedigeraPersonalEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlRedigeraPersonal4Layout.setVerticalGroup(
            pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedigeraPersonal4Layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(lblRedigeraPersonal4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblRedigeraPersonalValj4)
                .addGap(18, 18, 18)
                .addComponent(cbRedigeraPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalFornamn4)
                    .addComponent(txtRedigeraPersonalFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalEfternamn4)
                    .addComponent(txtRedigeraPersonalEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalLosenord4)
                    .addComponent(pwdRedigeraPersonalLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlRedigeraPersonal4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPersonalEpost4)
                    .addComponent(txtRedigeraPersonalEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnRedigeraPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRedigeraPersonalMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(219, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Redigera personal", pnlRedigeraPersonal4);

        pnlTaBortPersonal.setBackground(new java.awt.Color(255, 255, 255));

        lblTaBortEnPersonal.setBackground(new java.awt.Color(51, 51, 51));
        lblTaBortEnPersonal.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTaBortEnPersonal.setForeground(new java.awt.Color(102, 102, 102));
        lblTaBortEnPersonal.setText("Ta bort personal");

        lblTaBortPersonalMeddelande.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnTaBortPersonal.setBackground(new java.awt.Color(0, 102, 153));
        btnTaBortPersonal.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaBortPersonal.setForeground(new java.awt.Color(255, 255, 255));
        btnTaBortPersonal.setText("Ta bort personal");
        btnTaBortPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortPersonalActionPerformed(evt);
            }
        });

        lblTaBortPersonal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTaBortPersonal.setForeground(new java.awt.Color(102, 102, 102));
        lblTaBortPersonal.setText("Välj personal som ska tas bort");

        lblTaBortPersonalEpost.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTaBortPersonalEpost.setForeground(new java.awt.Color(102, 102, 102));
        lblTaBortPersonalEpost.setText("Epost:");

        javax.swing.GroupLayout pnlTaBortPersonalLayout = new javax.swing.GroupLayout(pnlTaBortPersonal);
        pnlTaBortPersonal.setLayout(pnlTaBortPersonalLayout);
        pnlTaBortPersonalLayout.setHorizontalGroup(
            pnlTaBortPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaBortPersonalLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addGroup(pnlTaBortPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlTaBortPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlTaBortPersonalLayout.createSequentialGroup()
                            .addComponent(lblTaBortPersonalEpost)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbTaBortPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblTaBortEnPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTaBortPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTaBortPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTaBortPersonalMeddelande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        pnlTaBortPersonalLayout.setVerticalGroup(
            pnlTaBortPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaBortPersonalLayout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(lblTaBortEnPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblTaBortPersonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTaBortPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaBortPersonalEpost)
                    .addComponent(cbTaBortPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTaBortPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaBortPersonalMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(346, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Ta bort personal", pnlTaBortPersonal);

        javax.swing.GroupLayout pnlPersonalsidaLayout = new javax.swing.GroupLayout(pnlPersonalsida);
        pnlPersonalsida.setLayout(pnlPersonalsidaLayout);
        pnlPersonalsidaLayout.setHorizontalGroup(
            pnlPersonalsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 787, Short.MAX_VALUE)
            .addGroup(pnlPersonalsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE))
        );
        pnlPersonalsidaLayout.setVerticalGroup(
            pnlPersonalsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(pnlPersonalsidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlPersonalsida, "card4");

        pnlHattar.setBackground(new java.awt.Color(51, 51, 51));

        lblAngeModell.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAngeModell.setForeground(new java.awt.Color(255, 255, 255));
        lblAngeModell.setText("Ange modell");

        lblSkapaHatt.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblSkapaHatt.setForeground(new java.awt.Color(255, 255, 255));
        lblSkapaHatt.setText("Skapa hatt");

        btnSpara.setText("Spara");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        lblAngeNamn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAngeNamn.setForeground(new java.awt.Color(255, 255, 255));
        lblAngeNamn.setText("Ange Namn");

        lblAngePris.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAngePris.setForeground(new java.awt.Color(255, 255, 255));
        lblAngePris.setText("Ange Pris");

        lblValjTyp.setForeground(new java.awt.Color(255, 255, 255));
        lblValjTyp.setText("Välj Typ");

        lblSkapaHattMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSkapaHattMeddelande.setForeground(new java.awt.Color(255, 255, 255));

        cbValjTyp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lagerförd", "Special" }));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Välj Material");

        javax.swing.GroupLayout pnlHattarLayout = new javax.swing.GroupLayout(pnlHattar);
        pnlHattar.setLayout(pnlHattarLayout);
        pnlHattarLayout.setHorizontalGroup(
            pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHattarLayout.createSequentialGroup()
                .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlHattarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSpara, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHattarLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSkapaHattMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHattarLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSkapaHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlHattarLayout.createSequentialGroup()
                                .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAngeNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAngeNamn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblAngeModell, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                    .addComponent(cbValjModell, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(176, 176, 176)
                                .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValjTyp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbValjTyp1, 0, 195, Short.MAX_VALUE)
                                    .addComponent(lblAngePris, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtAngePris)
                                    .addComponent(cbValjMaterialVidSkapa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnlHattarLayout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(143, 143, 143))
        );
        pnlHattarLayout.setVerticalGroup(
            pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHattarLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(lblSkapaHatt)
                .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlHattarLayout.createSequentialGroup()
                        .addGroup(pnlHattarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlHattarLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(lblAngeModell)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbValjModell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHattarLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbValjMaterialVidSkapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(lblValjTyp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbValjTyp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))
                        .addComponent(lblAngeNamn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAngeNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlHattarLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAngePris)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAngePris, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(btnSpara)
                .addGap(41, 41, 41)
                .addComponent(lblSkapaHattMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
        );

        pnlMitten.add(pnlHattar, "card4");

        pnlSkapaOrder.setBackground(new java.awt.Color(51, 51, 51));

        cbValjPrioritering.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brådskande", "Inte brådskande" }));

        btnSparaOrder.setForeground(new java.awt.Color(255, 255, 255));
        btnSparaOrder.setText("Skapa order");
        btnSparaOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaOrderActionPerformed(evt);
            }
        });

        lblRubrikPrioritering.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikPrioritering.setText("Orderns prioritering:");

        lblRubrikOrder.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikOrder.setText("Orderns status");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Skapa order");

        cbValjStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Godkänd", "Inte godkänd" }));

        lblRubrikKund.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikKund.setText("Kund");

        cbValjKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjKundActionPerformed(evt);
            }
        });

        lblRubrikDatum.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikDatum.setText("Datum:");

        lblRubrikDatum1.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikDatum1.setText("Kommentar:");

        txtKommentar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKommentar1ActionPerformed(evt);
            }
        });

        btnSparaOrder2.setForeground(new java.awt.Color(255, 255, 255));
        btnSparaOrder2.setText("Spara Order");
        btnSparaOrder2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaOrder2ActionPerformed(evt);
            }
        });

        lblOrderNummer2.setForeground(new java.awt.Color(255, 255, 255));
        lblOrderNummer2.setText("Ordernummer: ");

        lblOrderNummer.setForeground(new java.awt.Color(255, 255, 255));

        lblKundNamn.setForeground(new java.awt.Color(255, 255, 255));

        lblSparat.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlSkapaOrderLayout = new javax.swing.GroupLayout(pnlSkapaOrder);
        pnlSkapaOrder.setLayout(pnlSkapaOrderLayout);
        pnlSkapaOrderLayout.setHorizontalGroup(
            pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSparat, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                        .addComponent(lblOrderNummer2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblOrderNummer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                        .addComponent(lblRubrikDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbValjStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRubrikOrder)
                    .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                        .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblRubrikDatum1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblRubrikKund))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblKundNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKommentar1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                                .addComponent(cbValjKund, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSparaOrder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSparaOrder2)))
                        .addGap(265, 265, 265)
                        .addComponent(lblFel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbValjPrioritering, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRubrikPrioritering))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSkapaOrderLayout.setVerticalGroup(
            pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSkapaOrderLayout.createSequentialGroup()
                .addGap(166, 166, 166)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOrderNummer2)
                    .addComponent(lblOrderNummer, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(lblRubrikOrder)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbValjStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblRubrikPrioritering)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbValjPrioritering, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRubrikDatum)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRubrikDatum1)
                    .addComponent(txtKommentar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRubrikKund)
                    .addComponent(lblKundNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlSkapaOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbValjKund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSparaOrder)
                        .addComponent(btnSparaOrder2))
                    .addComponent(lblFel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(lblSparat, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlSkapaOrder, "card4");

        pnlValjHatt.setBackground(new java.awt.Color(51, 51, 51));

        jTabbedPane2.addTab("Visa hattar:", label1);

        jScrollPane5.setViewportView(list1);

        jTabbedPane2.addTab("Lagerförda", jScrollPane5);

        jScrollPane6.setViewportView(list2);

        jTabbedPane2.addTab("Special", jScrollPane6);

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        lblRubrikLaggTIllOrder.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikLaggTIllOrder.setText("Lägg till i order");

        cbOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOrderActionPerformed(evt);
            }
        });

        cbValjAllaHattar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjAllaHattarActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Välj material");

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Välj hatt");

        cbValjMaterial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjMaterialActionPerformed(evt);
            }
        });

        lblValjHattMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblValjHattMeddelande.setForeground(new java.awt.Color(255, 255, 255));

        lblStorlek.setForeground(new java.awt.Color(255, 255, 255));
        lblStorlek.setText("Ange storlek");

        lblStorlek1.setForeground(new java.awt.Color(255, 255, 255));
        lblStorlek1.setText("Ange text");

        javax.swing.GroupLayout pnlValjHattLayout = new javax.swing.GroupLayout(pnlValjHatt);
        pnlValjHatt.setLayout(pnlValjHattLayout);
        pnlValjHattLayout.setHorizontalGroup(
            pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValjHattLayout.createSequentialGroup()
                .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlValjHattLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlValjHattLayout.createSequentialGroup()
                                .addComponent(lblRubrikLaggTIllOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStorlek))
                            .addGroup(pnlValjHattLayout.createSequentialGroup()
                                .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbValjAllaHattar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnOk))
                                .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlValjHattLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(cbValjMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlValjHattLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAngeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAngeStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(pnlValjHattLayout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(lblStorlek1))))))))
                    .addGroup(pnlValjHattLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(lblValjHattMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                .addGap(136, 136, 136))
        );
        pnlValjHattLayout.setVerticalGroup(
            pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlValjHattLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlValjHattLayout.createSequentialGroup()
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbValjAllaHattar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbValjMaterial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRubrikLaggTIllOrder)
                            .addComponent(lblStorlek))
                        .addGap(18, 18, 18)
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAngeStorlek, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblStorlek1)
                        .addGap(8, 8, 8)
                        .addGroup(pnlValjHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAngeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOk))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblValjHattMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(497, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlValjHatt, "card4");

        pnlStatistik.setBackground(new java.awt.Color(51, 51, 51));

        btnManad.setText("Visa statistik för vald månad");
        btnManad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManadActionPerformed(evt);
            }
        });

        txtStatistik.setEditable(false);
        txtStatistik.setColumns(20);
        txtStatistik.setRows(5);
        jScrollPane3.setViewportView(txtStatistik);

        jLabel9.setText("Välj år");

        cbAr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024" }));

        jLabel10.setText("Välj månad");

        cbManad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "Novermber", "December" }));

        jLabel11.setText("Välj kvartal");

        cbKvartal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Q1", "Q2", "Q3", "Q4" }));

        btnAr.setText("Visa statistik för valt år");
        btnAr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArActionPerformed(evt);
            }
        });

        btnKvartal.setText("Visa statistik för valt kvartal");
        btnKvartal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKvartalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlStatistikLayout = new javax.swing.GroupLayout(pnlStatistik);
        pnlStatistik.setLayout(pnlStatistikLayout);
        pnlStatistikLayout.setHorizontalGroup(
            pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatistikLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStatistikLayout.createSequentialGroup()
                        .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbAr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(39, 39, 39)
                        .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cbManad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAr)
                    .addComponent(btnKvartal)
                    .addComponent(btnManad))
                .addGap(18, 18, 18)
                .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(cbKvartal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        pnlStatistikLayout.setVerticalGroup(
            pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStatistikLayout.createSequentialGroup()
                .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStatistikLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlStatistikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbAr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbManad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbKvartal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(100, 100, 100)
                        .addComponent(btnAr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKvartal)
                        .addGap(18, 18, 18)
                        .addComponent(btnManad))
                    .addGroup(pnlStatistikLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(359, Short.MAX_VALUE))
        );

        pnlMitten.add(pnlStatistik, "card10");

        pnlKund.setBackground(new java.awt.Color(102, 102, 102));

        pnlSkapaKund.setBackground(new java.awt.Color(51, 51, 51));

        lblEfternamn1.setForeground(new java.awt.Color(255, 255, 255));
        lblEfternamn1.setText("Efternamn");

        lblEpost1.setForeground(new java.awt.Color(255, 255, 255));
        lblEpost1.setText("Epost");

        lblGatuadress1.setForeground(new java.awt.Color(255, 255, 255));
        lblGatuadress1.setText("Gatuadress");

        btnSparaKund.setText("Spara kund");
        btnSparaKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaKundActionPerformed(evt);
            }
        });

        lblPostnummer1.setForeground(new java.awt.Color(255, 255, 255));
        lblPostnummer1.setText("Postnummer ");

        lblOrt1.setForeground(new java.awt.Color(255, 255, 255));
        lblOrt1.setText("Ort");

        lblTelefon1.setForeground(new java.awt.Color(255, 255, 255));
        lblTelefon1.setText("Telefon");

        txtFornamn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFornamn1ActionPerformed(evt);
            }
        });

        txtGatuadress1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGatuadress1ActionPerformed(evt);
            }
        });

        lblFornamn1.setForeground(new java.awt.Color(255, 255, 255));
        lblFornamn1.setText("Förnamn");

        lblSkapaKundMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSkapaKundMeddelande.setForeground(new java.awt.Color(255, 255, 255));

        lblSkapaKund.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblSkapaKund.setForeground(new java.awt.Color(255, 255, 255));
        lblSkapaKund.setText("Skapa kund");

        javax.swing.GroupLayout pnlSkapaKundLayout = new javax.swing.GroupLayout(pnlSkapaKund);
        pnlSkapaKund.setLayout(pnlSkapaKundLayout);
        pnlSkapaKundLayout.setHorizontalGroup(
            pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                        .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEpost1)
                            .addComponent(lblEfternamn1)
                            .addComponent(lblFornamn1)
                            .addComponent(lblTelefon1)
                            .addComponent(lblOrt1)
                            .addComponent(lblPostnummer1)
                            .addComponent(lblGatuadress1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSkapaKundLayout.createSequentialGroup()
                                .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFornamn1)
                                    .addComponent(txtEfternamn1)
                                    .addComponent(txtEpost1)
                                    .addComponent(txtGatuadress1)
                                    .addComponent(txtPostnummer1)
                                    .addComponent(txtOrt1)
                                    .addComponent(txtTelefon1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(373, 373, 373))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSkapaKundLayout.createSequentialGroup()
                                .addComponent(btnSparaKund)
                                .addGap(200, 200, 200))))
                    .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                        .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSkapaKund, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSkapaKundMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlSkapaKundLayout.setVerticalGroup(
            pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(lblSkapaKund, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(pnlSkapaKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                        .addComponent(lblFornamn1)
                        .addGap(28, 28, 28)
                        .addComponent(lblEfternamn1)
                        .addGap(18, 18, 18)
                        .addComponent(lblEpost1)
                        .addGap(18, 18, 18)
                        .addComponent(lblGatuadress1)
                        .addGap(33, 33, 33)
                        .addComponent(lblPostnummer1)
                        .addGap(18, 18, 18)
                        .addComponent(lblOrt1)
                        .addGap(28, 28, 28)
                        .addComponent(lblTelefon1))
                    .addGroup(pnlSkapaKundLayout.createSequentialGroup()
                        .addComponent(txtFornamn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEfternamn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEpost1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtGatuadress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(txtPostnummer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtOrt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTelefon1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addComponent(btnSparaKund, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSkapaKundMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Skapa kund", pnlSkapaKund);

        lblTaBortEpost.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTaBortEpost.setText("Epost");

        lblTaBortAngeEpost.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTaBortAngeEpost.setText("Välj kund som ska tas bort");

        btnTaBortKund.setBackground(new java.awt.Color(153, 0, 0));
        btnTaBortKund.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnTaBortKund.setForeground(new java.awt.Color(255, 255, 255));
        btnTaBortKund.setText("Ta bort kund");
        btnTaBortKund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortKundActionPerformed(evt);
            }
        });

        lblTaBortMeddelande.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblTaBortKund.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblTaBortKund.setText("Ta bort kund");

        javax.swing.GroupLayout pnlTaBortKundLayout = new javax.swing.GroupLayout(pnlTaBortKund);
        pnlTaBortKund.setLayout(pnlTaBortKundLayout);
        pnlTaBortKundLayout.setHorizontalGroup(
            pnlTaBortKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaBortKundLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(pnlTaBortKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTaBortMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlTaBortKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlTaBortKundLayout.createSequentialGroup()
                            .addComponent(lblTaBortEpost)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cbKundEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblTaBortKund, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTaBortAngeEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTaBortKund, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTaBortKundLayout.setVerticalGroup(
            pnlTaBortKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTaBortKundLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblTaBortKund, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(lblTaBortAngeEpost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlTaBortKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTaBortEpost)
                    .addComponent(cbKundEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTaBortKund, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTaBortMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Ta bort kund", pnlTaBortKund);

        pnlRedigeraKund.setBackground(new java.awt.Color(102, 102, 102));

        lblFornamn.setForeground(new java.awt.Color(255, 255, 255));
        lblFornamn.setText("Förnamn");

        lblGatuadress.setForeground(new java.awt.Color(255, 255, 255));
        lblGatuadress.setText("Gatuadress");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Kommentar");

        btnRedigeraKund1.setBackground(new java.awt.Color(0, 102, 0));
        btnRedigeraKund1.setForeground(new java.awt.Color(255, 255, 255));
        btnRedigeraKund1.setText("Redigera kund");
        btnRedigeraKund1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedigeraKund1ActionPerformed(evt);
            }
        });

        lblPostnummer.setForeground(new java.awt.Color(255, 255, 255));
        lblPostnummer.setText("Postnummer ");

        lblAndraKundMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAndraKundMeddelande.setForeground(new java.awt.Color(255, 255, 255));

        lblOrt.setForeground(new java.awt.Color(255, 255, 255));
        lblOrt.setText("Ort");

        lblAngeEpost.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAngeEpost.setForeground(new java.awt.Color(255, 255, 255));
        lblAngeEpost.setText("Välj epost för kund som ska redigeras");

        lblTelefon.setForeground(new java.awt.Color(255, 255, 255));
        lblTelefon.setText("Telefon");

        txtFornamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFornamnActionPerformed(evt);
            }
        });

        lblEfternamn.setForeground(new java.awt.Color(255, 255, 255));
        lblEfternamn.setText("Efternamn");

        txtGatuadress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGatuadressActionPerformed(evt);
            }
        });

        lblEpost.setForeground(new java.awt.Color(255, 255, 255));
        lblEpost.setText("Epost");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Redigera kundinformation");

        javax.swing.GroupLayout pnlRedigeraKundLayout = new javax.swing.GroupLayout(pnlRedigeraKund);
        pnlRedigeraKund.setLayout(pnlRedigeraKundLayout);
        pnlRedigeraKundLayout.setHorizontalGroup(
            pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                        .addComponent(lblPostnummer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPostnummer, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRedigeraKundLayout.createSequentialGroup()
                        .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRedigeraKundLayout.createSequentialGroup()
                                .addComponent(lblTelefon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRedigeraKundLayout.createSequentialGroup()
                                .addComponent(lblOrt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtOrt, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(txtGatuadress, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblAngeEpost, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(lblGatuadress)
                                        .addGap(24, 24, 24))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlRedigeraKundLayout.createSequentialGroup()
                                        .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblFornamn, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEfternamn, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEpost, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbAndraFyllEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(7, 7, 7))
                    .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                                .addComponent(lblAndraKundMeddelande, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRedigeraKund1))
                            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5)))
                .addGap(172, 172, 172))
        );

        pnlRedigeraKundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtEfternamn, txtFornamn, txtGatuadress, txtKommentar, txtOrt, txtPostnummer, txtTelefon});

        pnlRedigeraKundLayout.setVerticalGroup(
            pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedigeraKundLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAngeEpost)
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbAndraFyllEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEpost))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornamn)
                    .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEfternamn)
                    .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGatuadress)
                    .addComponent(txtGatuadress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostnummer)
                    .addComponent(txtPostnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrt))
                .addGap(18, 18, 18)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefon)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKommentar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRedigeraKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAndraKundMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRedigeraKund1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlRedigeraKundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtEfternamn, txtFornamn, txtGatuadress, txtKommentar, txtOrt, txtPostnummer, txtTelefon});

        jTabbedPane1.addTab("Ändra kundinformation", pnlRedigeraKund);

        lblValjKund1.setText("Välj kund");

        cbValjKundEpost2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjKundEpost2ActionPerformed(evt);
            }
        });

        lblValjHatt1.setText("Välj hatt att lagerföra");

        cbValjKundHatt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjKundHatt1ActionPerformed(evt);
            }
        });

        btnOk3.setText("Ok");
        btnOk3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOk3ActionPerformed(evt);
            }
        });

        lblLagerforHatten1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLagerforHatten1.setText("Lagerför specialbeställd hatt");

        javax.swing.GroupLayout pnlLagerforHattLayout = new javax.swing.GroupLayout(pnlLagerforHatt);
        pnlLagerforHatt.setLayout(pnlLagerforHattLayout);
        pnlLagerforHattLayout.setHorizontalGroup(
            pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLagerforHattLayout.createSequentialGroup()
                .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLagerforHattLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(lblLagerforaHattMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlLagerforHattLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnOk3)
                            .addGroup(pnlLagerforHattLayout.createSequentialGroup()
                                .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbValjKundEpost2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblValjKund1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(110, 110, 110)
                                .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblValjHatt1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbValjKundHatt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblLagerforHatten1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlLagerforHattLayout.setVerticalGroup(
            pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLagerforHattLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblLagerforHatten1)
                .addGap(68, 68, 68)
                .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValjHatt1)
                    .addComponent(lblValjKund1))
                .addGap(18, 18, 18)
                .addGroup(pnlLagerforHattLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbValjKundHatt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbValjKundEpost2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90)
                .addComponent(btnOk3)
                .addGap(18, 18, 18)
                .addComponent(lblLagerforaHattMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lagerför hatt", pnlLagerforHatt);

        cbValjKundEpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbValjKundEpostActionPerformed(evt);
            }
        });

        jtxtBestallningsHistorik.setEditable(false);
        jtxtBestallningsHistorik.setColumns(20);
        jtxtBestallningsHistorik.setRows(5);
        jScrollPane8.setViewportView(jtxtBestallningsHistorik);

        javax.swing.GroupLayout pnlBestallningshistorikLayout = new javax.swing.GroupLayout(pnlBestallningshistorik);
        pnlBestallningshistorik.setLayout(pnlBestallningshistorikLayout);
        pnlBestallningshistorikLayout.setHorizontalGroup(
            pnlBestallningshistorikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBestallningshistorikLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(cbValjKundEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBestallningshistorikLayout.setVerticalGroup(
            pnlBestallningshistorikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBestallningshistorikLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(cbValjKundEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(706, Short.MAX_VALUE))
            .addGroup(pnlBestallningshistorikLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Beställningshistorik", pnlBestallningshistorik);

        javax.swing.GroupLayout pnlKundLayout = new javax.swing.GroupLayout(pnlKund);
        pnlKund.setLayout(pnlKundLayout);
        pnlKundLayout.setHorizontalGroup(
            pnlKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, Short.MAX_VALUE)
        );
        pnlKundLayout.setVerticalGroup(
            pnlKundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pnlMitten.add(pnlKund, "card4");

        tblMaterial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Material-ID", "Namn", "Beskrivning"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblMaterial.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(tblMaterial);
        if (tblMaterial.getColumnModel().getColumnCount() > 0) {
            tblMaterial.getColumnModel().getColumn(2).setMinWidth(1000);
            tblMaterial.getColumnModel().getColumn(2).setMaxWidth(1200);
        }

        javax.swing.GroupLayout pnlVisaMaterialLayout = new javax.swing.GroupLayout(pnlVisaMaterial);
        pnlVisaMaterial.setLayout(pnlVisaMaterialLayout);
        pnlVisaMaterialLayout.setHorizontalGroup(
            pnlVisaMaterialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
        );
        pnlVisaMaterialLayout.setVerticalGroup(
            pnlVisaMaterialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );

        pnlMitten.add(pnlVisaMaterial, "card9");

        pnlPaketinfo.setBackground(new java.awt.Color(51, 51, 51));

        lblHojd2.setForeground(new java.awt.Color(255, 255, 255));
        lblHojd2.setText("Ange fraktkostnad:");

        lblAngeLangd.setForeground(new java.awt.Color(255, 255, 255));
        lblAngeLangd.setText("Ange längd:");

        lblVikt.setForeground(new java.awt.Color(255, 255, 255));
        lblVikt.setText("Ange vikt:");

        lblRubrikLaggTIllOrder2.setForeground(new java.awt.Color(255, 255, 255));
        lblRubrikLaggTIllOrder2.setText("Lägg till i order:");

        btnSparaPaket.setBackground(new java.awt.Color(51, 51, 51));
        btnSparaPaket.setForeground(new java.awt.Color(255, 255, 255));
        btnSparaPaket.setText("Spara paketinformation");
        btnSparaPaket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaPaketActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mata in paketinformation:");

        lblHojd1.setForeground(new java.awt.Color(255, 255, 255));
        lblHojd1.setText("Ange bredd:");

        lblHojd.setForeground(new java.awt.Color(255, 255, 255));
        lblHojd.setText("Ange höjd:");

        lblVisaPaketInformationRubrik.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblVisaPaketInformationRubrik.setForeground(new java.awt.Color(255, 255, 255));
        lblVisaPaketInformationRubrik.setText("Lägga in paketinformation");

        lblPaketInfoMeddelande.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPaketInfoMeddelande.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout pnlPaketinfoLayout = new javax.swing.GroupLayout(pnlPaketinfo);
        pnlPaketinfo.setLayout(pnlPaketinfoLayout);
        pnlPaketinfoLayout.setHorizontalGroup(
            pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPaketInfoMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                            .addGap(186, 186, 186)
                            .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel6))
                                    .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                                        .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                                                .addGap(42, 42, 42)
                                                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblAngeLangd)
                                                    .addComponent(lblHojd)
                                                    .addComponent(lblVikt)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaketinfoLayout.createSequentialGroup()
                                                .addComponent(lblHojd2)
                                                .addGap(6, 6, 6))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaketinfoLayout.createSequentialGroup()
                                                .addComponent(lblHojd1)
                                                .addGap(11, 11, 11)))
                                        .addGap(20, 20, 20)
                                        .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtAngeVikt)
                                            .addComponent(txtAngeBredd)
                                            .addComponent(txtAngeFraktkostnad, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAngeHojd)
                                            .addComponent(txtAngeLangd, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnSparaPaket)
                                        .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                                            .addComponent(lblRubrikLaggTIllOrder2)
                                            .addGap(18, 18, 18)
                                            .addComponent(cbOrder3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                            .addGap(102, 102, 102)
                            .addComponent(lblVisaPaketInformationRubrik, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(267, Short.MAX_VALUE))
        );
        pnlPaketinfoLayout.setVerticalGroup(
            pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(lblVisaPaketInformationRubrik, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAngeLangd)
                    .addComponent(txtAngeLangd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHojd)
                    .addComponent(txtAngeHojd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVikt)
                    .addGroup(pnlPaketinfoLayout.createSequentialGroup()
                        .addComponent(txtAngeVikt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAngeBredd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHojd1))))
                .addGap(26, 26, 26)
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAngeFraktkostnad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHojd2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlPaketinfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRubrikLaggTIllOrder2)
                    .addComponent(cbOrder3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSparaPaket)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPaketInfoMeddelande, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(312, 312, 312))
        );

        pnlMitten.add(pnlPaketinfo, "card10");

        pnlProduktdetaljer.setBackground(new java.awt.Color(255, 255, 255));
        pnlProduktdetaljer.setForeground(new java.awt.Color(255, 255, 255));
        pnlProduktdetaljer.setLayout(null);

        lblAndraProduktdetalj.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblAndraProduktdetalj.setText("Ändra produktdetaljer");
        pnlProduktdetaljer.add(lblAndraProduktdetalj);
        lblAndraProduktdetalj.setBounds(70, 40, 478, 53);
        pnlProduktdetaljer.add(txtProduktdetaljPris);
        txtProduktdetaljPris.setBounds(400, 380, 250, 40);
        pnlProduktdetaljer.add(txtProduktdetaljNamn);
        txtProduktdetaljNamn.setBounds(70, 270, 250, 40);
        pnlProduktdetaljer.add(txtProduktdetaljModell);
        txtProduktdetaljModell.setBounds(70, 380, 250, 40);

        lblNamn.setText("Namn");
        pnlProduktdetaljer.add(lblNamn);
        lblNamn.setBounds(70, 250, 250, 16);

        lblProduktdetaljModell.setText("Modell");
        pnlProduktdetaljer.add(lblProduktdetaljModell);
        lblProduktdetaljModell.setBounds(70, 360, 90, 16);

        lblProduktdetaljPris.setText("Pris");
        pnlProduktdetaljer.add(lblProduktdetaljPris);
        lblProduktdetaljPris.setBounds(400, 360, 160, 16);

        lblProduktdetaljGodkand.setText("Hattstatus (för lagerföring)");
        pnlProduktdetaljer.add(lblProduktdetaljGodkand);
        lblProduktdetaljGodkand.setBounds(400, 250, 200, 16);

        cbProduktDetaljGodkand.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Godkänd", "Inte godkänd" }));
        pnlProduktdetaljer.add(cbProduktDetaljGodkand);
        cbProduktDetaljGodkand.setBounds(400, 270, 250, 40);

        btnAndraProduktdetalj.setBackground(new java.awt.Color(0, 102, 0));
        btnAndraProduktdetalj.setForeground(new java.awt.Color(255, 255, 255));
        btnAndraProduktdetalj.setText("Ändra");
        btnAndraProduktdetalj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraProduktdetaljActionPerformed(evt);
            }
        });
        pnlProduktdetaljer.add(btnAndraProduktdetalj);
        btnAndraProduktdetalj.setBounds(400, 460, 250, 40);

        lblAndraProduktdetaljMeddelande.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        pnlProduktdetaljer.add(lblAndraProduktdetaljMeddelande);
        lblAndraProduktdetaljMeddelande.setBounds(70, 530, 530, 50);
        pnlProduktdetaljer.add(cbProduktdetaljHatt);
        cbProduktdetaljHatt.setBounds(70, 180, 250, 40);

        lblProduktdetaljHatt.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblProduktdetaljHatt.setText("Välj hatt att ändra produktdetaljer i");
        pnlProduktdetaljer.add(lblProduktdetaljHatt);
        lblProduktdetaljHatt.setBounds(70, 140, 380, 30);

        pnlMitten.add(pnlProduktdetaljer, "card11");

        pnlSideBarHoger.setBackground(new java.awt.Color(255, 255, 255));
        pnlSideBarHoger.setLayout(new java.awt.CardLayout());

        personalTillHatt.setBackground(new java.awt.Color(0, 102, 153));
        personalTillHatt.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        personalTillHatt.setForeground(new java.awt.Color(255, 255, 255));
        personalTillHatt.setText("Lägg till personal till hatt");
        personalTillHatt.setBorder(null);
        personalTillHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalTillHattActionPerformed(evt);
            }
        });

        btnHattSida.setBackground(new java.awt.Color(94, 157, 157));
        btnHattSida.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        btnHattSida.setForeground(new java.awt.Color(255, 255, 255));
        btnHattSida.setText("Hattsida");
        btnHattSida.setBorder(null);
        btnHattSida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHattSidaActionPerformed(evt);
            }
        });

        orderLista.setBackground(new java.awt.Color(204, 204, 204));
        orderLista.setFont(new java.awt.Font("Microsoft YaHei UI Light", 0, 12)); // NOI18N
        orderLista.setForeground(new java.awt.Color(51, 51, 51));
        orderLista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = orders.toArray(new String[orders.size()]);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        planeringsLista.setViewportView(orderLista);

        taBortpersonalFranHatt.setBackground(new java.awt.Color(0, 102, 153));
        taBortpersonalFranHatt.setFont(new java.awt.Font("Microsoft YaHei Light", 0, 12)); // NOI18N
        taBortpersonalFranHatt.setForeground(new java.awt.Color(255, 255, 255));
        taBortpersonalFranHatt.setText("Ta bort mig från hatt");
        taBortpersonalFranHatt.setBorder(null);
        taBortpersonalFranHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taBortpersonalFranHattActionPerformed(evt);
            }
        });

        lblError.setForeground(new java.awt.Color(255, 51, 51));
        lblError.setText("                                              ");

        javax.swing.GroupLayout pnlPlaneringsYtaLayout = new javax.swing.GroupLayout(pnlPlaneringsYta);
        pnlPlaneringsYta.setLayout(pnlPlaneringsYtaLayout);
        pnlPlaneringsYtaLayout.setHorizontalGroup(
            pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
            .addGroup(pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPlaneringsYtaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(planeringsLista, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlPlaneringsYtaLayout.createSequentialGroup()
                            .addGroup(pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(personalTillHatt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(taBortpersonalFranHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHattSida, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlPlaneringsYtaLayout.setVerticalGroup(
            pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 816, Short.MAX_VALUE)
            .addGroup(pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlPlaneringsYtaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(personalTillHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlPlaneringsYtaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnHattSida, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(taBortpersonalFranHatt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(planeringsLista, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlSideBarHoger.add(pnlPlaneringsYta, "card2");

        lblOrderNummer3.setText("OrderNR :");

        btnKostnadsFröslag.setText("Skapa kostnadsförslag");
        btnKostnadsFröslag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKostnadsFröslagActionPerformed(evt);
            }
        });

        lblKund.setText("Kund:");

        txtSammanstallning.setColumns(20);
        txtSammanstallning.setRows(5);
        jScrollPane4.setViewportView(txtSammanstallning);

        btnTaBortHatt.setText("Ta bort hatt");
        btnTaBortHatt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortHattActionPerformed(evt);
            }
        });

        listHattarIOrder.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(listHattarIOrder);

        javax.swing.GroupLayout pnlPagaendeOrdernLayout = new javax.swing.GroupLayout(pnlPagaendeOrdern);
        pnlPagaendeOrdern.setLayout(pnlPagaendeOrdernLayout);
        pnlPagaendeOrdernLayout.setHorizontalGroup(
            pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPagaendeOrdernLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKostnadsFröslag)
                    .addGroup(pnlPagaendeOrdernLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlPagaendeOrdernLayout.createSequentialGroup()
                                .addComponent(lblOrderNummer3)
                                .addGap(18, 18, 18)
                                .addComponent(lblVisaOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(84, 84, 84))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPagaendeOrdernLayout.createSequentialGroup()
                                .addComponent(lblKund, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblKundNamn2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPagaendeOrdernLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnTaBortHatt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addGap(14, 14, 14))
        );
        pnlPagaendeOrdernLayout.setVerticalGroup(
            pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPagaendeOrdernLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOrderNummer3)
                    .addComponent(lblVisaOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblKund)
                    .addComponent(lblKundNamn2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlPagaendeOrdernLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPagaendeOrdernLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPagaendeOrdernLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(btnTaBortHatt)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnKostnadsFröslag)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        pnlSideBarHoger.add(pnlPagaendeOrdern, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlSideBarVanster, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlMitten, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlSideBarHoger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlSideBarVanster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(pnlSideBarHoger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMitten, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnLoggaUtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoggaUtActionPerformed
        // Loggar ut användaren och skickar till startsidan
        InloggningsSida enInloggning = new InloggningsSida(idb);
        enInloggning.show();
        dispose();
    }//GEN-LAST:event_btnLoggaUtActionPerformed

    private void btnVisaMaterialinfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaMaterialinfoActionPerformed
        panelerGomda();
        pnlVisaMaterial.show();
        String sqlFraga = "SELECT Material_ID FROM Material";

        String getMaterialInfo = "SELECT * FROM Material";

        try {
            ArrayList<HashMap<String, String>> materialInfo = idb.fetchRows(getMaterialInfo);

            ArrayList<String> antalMaterial = idb.fetchColumn(sqlFraga);

            int antalMaterialInt = antalMaterial.size();

            int i = 0;
            while (i < antalMaterialInt) {
                for (HashMap<String, String> enHashMap : materialInfo) {

                    String materialID = enHashMap.get("Material_ID");
                    String namn = enHashMap.get("Namn");
                    String beskrivning = enHashMap.get("Beskrivning");

                    int j = 0;
                    while (j < 3) {
                        tblMaterial.setValueAt(materialID, i, j);
                        j++;
                        tblMaterial.setValueAt(namn, i, j);
                        j++;
                        tblMaterial.setValueAt(beskrivning, i, j);
                        j++;
                    }
                    i++;
                }

            }
        } catch (InfException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnVisaMaterialinfoActionPerformed

    private void btnValjHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjHattActionPerformed
        panelerGomda();
        cbValjAllaHattar.removeAllItems();
        cbValjMaterial.removeAllItems();
        cbOrder.removeAllItems();
        list1.removeAll();
        list2.removeAll();
        listHatt();
        listHattSpecial();
        fyllBoxOrder3();
        fyllBoxHattar();
        fyllBoxMaterial();
        lblValjHattMeddelande.setText("");
        pnlValjHatt.show();
    }//GEN-LAST:event_btnValjHattActionPerformed

    private void btnKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKundActionPerformed
        panelerGomda();
        cbValjKundEpost2.removeAllItems();
        cbValjKundHatt1.removeAllItems();
        fyllBoxOrderKund();
        fyllBoxKundEmail();

        lblSkapaKundMeddelande.setText("");
        lblTaBortMeddelande.setText("");
        lblAndraKundMeddelande.setText("");
        pnlKund.show();
    }//GEN-LAST:event_btnKundActionPerformed

    private void btnHattarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHattarActionPerformed
        lblSkapaHattMeddelande.setText("");
        cbValjModell.removeAllItems();
        cbValjMaterialVidSkapa.removeAllItems();
        fyllMaterial();
        fyllBoxModell();
        panelerGomda();
        pnlHattar.show();
    }//GEN-LAST:event_btnHattarActionPerformed

    private void btnSkapaOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaOrderActionPerformed

        panelerGomda();
        cbValjKund.removeAllItems();
        fyllBoxKund();
        pnlSkapaOrder.show();
        btnSparaOrder2.hide();
        btnSparaOrder.show();
        cbValjKund.show();
        lblOrderNummer.hide();
        lblOrderNummer2.hide();
        lblKundNamn.hide();
        lblSparat.hide();
    }//GEN-LAST:event_btnSkapaOrderActionPerformed

    private void btnOrdersidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdersidaActionPerformed
        lblOrderSidaMeddelande.setText("");
        lblAndraStatus.setText("");
        panelerGomda();
        pnlOrdersida.show();
        cbOrderValj3.removeAllItems();
        fyllBoxOrderValj();
    }//GEN-LAST:event_btnOrdersidaActionPerformed

    private void btnStartsidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartsidaActionPerformed
        panelerGomda();
        pnlStartsida.show();
        pnlPlaneringsYta.show();
        fyllOrderLista2();
    }//GEN-LAST:event_btnStartsidaActionPerformed

    private void btnRedigeraKund1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedigeraKund1ActionPerformed
        // Redigerar en kunds information        
        if (Validering.harTextFaltetVarde(txtFornamn, lblAndraKundMeddelande)
                && Validering.harTextFaltetVarde(txtEfternamn, lblAndraKundMeddelande)
                && Validering.harTextFaltetVarde(txtGatuadress, lblAndraKundMeddelande)
                && Validering.harTextFaltetVarde(txtPostnummer, lblAndraKundMeddelande)
                && Validering.harTextFaltetVarde(txtOrt, lblAndraKundMeddelande)
                && Validering.harTextFaltetVarde(txtTelefon, lblAndraKundMeddelande)) {
            try {
                idb.update("UPDATE kund SET Förnamn='" + txtFornamn.getText() + "', "
                        + "Efternamn='" + txtEfternamn.getText() + "', "
                        + "Adress='" + txtGatuadress.getText() + "', "
                        + "Postnummer='" + txtPostnummer.getText() + "', "
                        + "Ort='" + txtOrt.getText() + "', "
                        + "Telefon='" + txtTelefon.getText() + "' "
                        + "WHERE Epost='" + cbAndraFyllEpost.getSelectedItem() + "';");
                lblAndraKundMeddelande.setText("Kund har ändrats.");
                cbAndraFyllEpost.removeAllItems();
                fyllEpost();
            } catch (InfException fel) {
                lblAndraKundMeddelande.setText("Ett fel uppstod!");
            }
        }
    }//GEN-LAST:event_btnRedigeraKund1ActionPerformed

    private void txtFornamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFornamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFornamnActionPerformed

    private void txtGatuadressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGatuadressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGatuadressActionPerformed

    private void btnSparaKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaKundActionPerformed
        // TODO add your handling code here:
        lblSkapaKundMeddelande.setText("");
        try {
            if (Validering.harTextFaltetVarde(txtFornamn1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtEfternamn1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtEpost1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtGatuadress1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtPostnummer1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtOrt1, lblSkapaKundMeddelande)
                    && Validering.harTextFaltetVarde(txtTelefon1, lblSkapaKundMeddelande)) {
                String fornamn = txtFornamn1.getText();
                String efternamn = txtEfternamn1.getText();
                String epost = txtEpost1.getText();
                String gatuadress = txtGatuadress1.getText();
                String ort = txtOrt1.getText();
                String postnummer = txtPostnummer1.getText();
                String telefon = txtTelefon1.getText();
                int kundId = Integer.parseInt(idb.fetchSingle("SELECT MAX(Kund_ID) FROM Kund")) + 1;
                String kundIdString = Integer.toString(kundId);

                ArrayList<String> epostMap = idb.fetchColumn("Select Epost from Kund");

                if (!epostMap.contains(epost)) {
                    String fraga = "INSERT INTO kund VALUES (" + kundIdString + ", '" + fornamn + "', '" + efternamn + "', '" + telefon + "', '" + epost + "', '" + gatuadress + "', '" + postnummer + "', '" + ort + "')";

                    idb.insert(fraga);
                    lblSkapaKundMeddelande.setText("Kund har skapats!");
                    cbKundEpost.removeAllItems();
                    cbAndraFyllEpost.removeAllItems();
                    fyllEpost();
                } else {
                    lblSkapaKundMeddelande.setText("Epost är redan registrerat. Vänligen ange en annan epost.");
                }
            }

        } catch (InfException ex) {
        }

    }//GEN-LAST:event_btnSparaKundActionPerformed

    private void fyllBoxOrder() {
        //fyll combobox med order
        String fragaFyllBox = "Select Order_ID from orders order by Order_ID";
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
            for (String hatt : allaOrder) {
                cbOrder3.addItem(hatt);
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxOrder4() {
        //fyll combobox med order
        String fragaFyllBox = "Select Order_ID from orders order by Order_ID";
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
            for (String hatt : allaOrder) {
                cbOrder4.addItem(hatt);
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }
//    private void fyllBoxOrder1() {
//        //fyll combobox med order
//        String fragaFyllBox = "Select Order_ID from orders order by Order_ID";
//        ArrayList<String> allaOrder;
//        try {
//            allaOrder = idb.fetchColumn(fragaFyllBox);
//            for (String hatt : allaOrder) {
//                cbOrderValj.addItem(hatt);
//            }
//        } catch (Exception ettUndantag) {
//            System.out.println("Error " + ettUndantag.getMessage());
//        }
//    }

    private void fyllBoxOrder2() {
        //fyll combobox med order
        String fragaFyllBox = "Select Order_ID from orders order by Order_ID";
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
            for (String hatt : allaOrder) {
                cbOrder2.addItem(hatt);
            }
        } catch (Exception ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxModell() {
        //fyll combobox med order
        String fragaFyllBox = "Select DISTINCT Modell from hatt";
        ArrayList<String> allaModell;
        try {
            allaModell = idb.fetchColumn(fragaFyllBox);
            for (String modell : allaModell) {
                cbValjModell.addItem(modell);
            }
        } catch (Exception ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxOrderValj() {
        //fyll combobox med order
        String avslutad = "Avslutad";
        String fragaFyllBox = "Select Order_ID from orders where Status != '" + avslutad + "' order by Datum DESC";
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
            for (String order : allaOrder) {
                cbOrderValj3.addItem(order);
            }
        } catch (Exception ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }


    private void txtFornamn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFornamn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFornamn1ActionPerformed

    private void txtGatuadress1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGatuadress1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGatuadress1ActionPerformed

    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
        try {

            // Hämta värden från användargränssnittet
            int produktID = Integer.parseInt(idb.fetchSingle("SELECT MAX(Produkt_ID) FROM hatt")) + 1;
            String produktIDString = Integer.toString(produktID);
            String namn = txtAngeNamn.getText();
            String pris = txtAngePris.getText();
            String valdModell = cbValjModell.getSelectedItem().toString();
            String valjTyp = cbValjTyp1.getSelectedItem().toString();
            String string1 = "Lagerförd";
            String material = cbValjMaterialVidSkapa.getSelectedItem().toString();

            String materialId = idb.fetchSingle("Select material_ID from material where namn = '" + material + "'");

            // Kontrollera om alla fält är ifyllda
            boolean allaFaltIfyllda
                    = Validering.harTextFaltetVarde(txtAngeNamn, lblSkapaHattMeddelande)
                    && Validering.harTextFaltetVarde(txtAngePris, lblSkapaHattMeddelande)
                    && Validering.kollaDecimalTal(txtAngePris, lblSkapaHattMeddelande);

            // Skapa SQL-query för att lägga till en hatt i databasen, med olika värden beroende på vald typ
            String skapaHattQuery = "insert into hatt (Produkt_ID, Namn, Modell, Pris, Godkänd) Values ('" + produktIDString + "', '" + namn + "', '" + valdModell + "', '" + pris + "','" + 1 + "')";
            String skapaHattQuery2 = "insert into hatt (Produkt_ID, Namn, Modell, Pris, Godkänd) Values ('" + produktIDString + "', '" + namn + "', '" + valdModell + "', '" + pris + "','" + 0 + "')";
            String materialIHatt = "Insert into material_i_hatt (Hatt_ID, material_ID) values (" + produktIDString + ", " + materialId + ")";

            // Om typen är "Lagerförd", lägg till en hatt i databasen med status godkänd (1), annars lägg till med status ej godkänd (0)
            if (valjTyp.equals(string1)) {
                idb.insert(skapaHattQuery);
                idb.insert(materialIHatt);
            } else {
                idb.insert(skapaHattQuery2);
                idb.insert(materialIHatt);
            }
            lblSkapaHattMeddelande.setText("Hatt är tillagd!");
        } catch (InfException e) {
            // Hantera undantag vid felaktig interaktion med databasen
            System.out.println(e);
        }
    }//GEN-LAST:event_btnSparaActionPerformed
    private void fyllInfo(String orderId) {

        String förnamn;
        try {
            förnamn = idb.fetchSingle("Select Förnamn from Kund where Kund_ID = (Select Kund from Orders where Order_ID = " + orderId + ")");
            String efternamn = idb.fetchSingle("Select Efternamn from Kund where Kund_ID = (Select Kund from Orders where Order_ID = " + orderId + ")");
            String namn = förnamn + " " + efternamn;

            lblVisaOrder.setText(orderId);

            lblKundNamn2.setText(namn);

        } catch (InfException ex) {
            Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void fyllKostnad(String orderId) {

        txtSammanstallning.setText(sammanStallning(lblVisaOrder.getText()));
    }

    private void fyllLista(String orderId) {

        try {

            DefaultListModel<String> listModel = new DefaultListModel<>();
            listHattarIOrder.setModel(listModel);

            ArrayList<HashMap<String, String>> listaHattar = idb.fetchRows("SELECT  kombo_id, modell, pris FROM hatt_i_order JOIN hatt ON hatt_i_order.hatt_id = hatt.produkt_id WHERE Order_ID = " + lblVisaOrder.getText() + " order by kombo_id");
            for (HashMap<String, String> enHatt : listaHattar) {
                String rad = "Modell: " + enHatt.get("Modell") + "      " + "Pris: " + enHatt.get("Pris");
                listModel.addElement(rad);
            }
        } catch (InfException ex) {
            Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String sammanStallning(String orderId) {

        String kostnadsforslag = "";

        try {
            double hattSumma = 0;
            ArrayList<String> listaHattPriser = idb.fetchColumn("select hatt.pris from hatt join hatt_i_order hio on hatt.Produkt_ID = hio.Hatt_ID join orders on hio.Order_ID = orders.Order_ID where hio.Order_ID = " + lblVisaOrder.getText());
            for (String enHatt : listaHattPriser) {
                double pris = Double.parseDouble(enHatt);
                hattSumma = hattSumma + pris;
            }
            String bradskande = idb.fetchSingle("Select brådskande from orders where order_id =" + orderId);
            double tillagg = 0;
            if (bradskande.equals("1")) {
                tillagg = Math.round(hattSumma * 0.2 * 100.0) / 100.0;
            }

            double moms = Math.round((hattSumma + tillagg) * 0.25 * 100.0) / 100.0;
            double totalSummaMoms = Math.round((hattSumma + tillagg) * 1.25 * 100.0) / 100.0;
            hattSumma = Math.round(hattSumma * 100.0) / 100.0;
            kostnadsforslag = "Pris: " + hattSumma + " \n" + "Tillägg: " + tillagg + " \n"
                    + "Moms: " + moms + " \n"
                    + "Totalsumma (ink. Moms): " + totalSummaMoms;

        } catch (InfException ex) {
            Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        return kostnadsforslag;
    }

    private void btnValjOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjOrderActionPerformed

        try {

            if (!listPaborjadeOrdrar.isSelectionEmpty()) {
                panelerGomda();
                pnlSkapaOrder.show();

                String rad = listPaborjadeOrdrar.getSelectedValue();
                String[] radDelar = rad.split(" ");
                int orderId = Integer.parseInt(radDelar[1]);
                lblOrderNummer.setText(radDelar[1]);
                lblOrderNummer.show();
                String status = idb.fetchSingle("Select status from orders where order_id = " + orderId);
                if (status.equals("Godkänd")) {
                    cbValjStatus.setSelectedIndex(0);
                } else {
                    cbValjStatus.setSelectedIndex(1);
                }

                String prio = idb.fetchSingle("Select brådskande from orders where order_id = " + orderId);
                if (prio.equals("0")) {
                    cbValjPrioritering.setSelectedIndex(1);
                } else {
                    cbValjPrioritering.setSelectedIndex(0);
                }

                String datum = idb.fetchSingle("Select datum from orders where order_id = " + orderId);
                if (datum != null) {
                    txtDatum.setText(datum);
                }

                String kommentar = idb.fetchSingle("Select kommentar from orders where order_id = " + orderId);
                if (kommentar != null) {
                    txtKommentar1.setText(kommentar);
                }

                HashMap<String, String> namnMap = idb.fetchRow("Select Förnamn, Efternamn from kund where Kund_ID = (Select Kund from orders where Order_ID = " + orderId + ")");
                String namn = namnMap.get("Förnamn") + " " + namnMap.get("Efternamn");
                lblKundNamn.setText(namn);
                lblKundNamn.show();

                btnSparaOrder.hide();
                btnSparaOrder2.show();
                cbValjKund.hide();
                lblOrderNummer2.show();
                lblSparat.hide();
                pnlPlaneringsYta.hide();
                pnlPagaendeOrdern.show();
                fyllInfo(radDelar[1]);
                fyllLista(radDelar[1]);
                fyllKostnad(radDelar[1]);

            }

        } catch (InfException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnValjOrderActionPerformed

    private void btnTaBortKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortKundActionPerformed
        // tar bort en kund
        lblTaBortMeddelande.setText("");
        taBortKund();
        cbKundEpost.removeAllItems();
        cbAndraFyllEpost.removeAllItems();
        cbValjKundEpost2.removeAllItems();
        cbValjKundHatt1.removeAllItems();
        fyllBoxKundEmail();
        fyllBoxOrderKund();
        fyllEpost();
    }//GEN-LAST:event_btnTaBortKundActionPerformed

    private boolean taBortKund() {
        try {

            String ruta = cbKundEpost.getSelectedItem().toString();
            String fraga = "SELECT Epost FROM kund";
            boolean hittad = false;

            ArrayList<String> kunder = idb.fetchColumn(fraga);

            String anonym = "Anonym";

            for (String enKund : kunder) {

                if (enKund.equalsIgnoreCase(ruta)) {
                    idb.update("Update kund set Förnamn = '" + anonym + "', Efternamn = '" + anonym + "', Telefon = '" + anonym + "', Epost = '" + anonym + "', Adress ='" + anonym + "', Postnummer = '" + anonym + "', Ort = '" + anonym + "' Where Epost = '" + ruta + "';");

                    lblTaBortMeddelande.setText(ruta + " har raderats.");
                    hittad = true;
                    return true;
                }
            }

            if (!hittad) {
                lblTaBortMeddelande.setText("Angiven epost existerar ej!");
            }

        } catch (InfException fel) {
            lblTaBortMeddelande.setText("Ett fel uppstod!");
            fel.printStackTrace();

        }

        return false;
    }

    private void fyllEpost() {
        String fraga = "SELECT Epost FROM kund";
        try {
            ArrayList<String> epost = idb.fetchColumn(fraga);
            for (String enEpost : epost) {

                if (!enEpost.equals("Anonym")) {
                    cbAndraFyllEpost.addItem(enEpost);
                    cbKundEpost.addItem(enEpost);
                }

            }
        } catch (InfException fel) {
            fel.printStackTrace();
        }
    }

    private void txtKommentar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKommentar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKommentar1ActionPerformed

    private void btnSparaOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaOrderActionPerformed
        // TODO add your handling code here:

        if (Validering.kollaDatumFormat(txtDatum, lblSparat)) {
            //Hämtar valt objekt från ComboBoxen samt konverterar det till sträng
            String valdStatus = cbValjStatus.getSelectedItem().toString().toLowerCase();
            String valdKund = cbValjKund.getSelectedItem().toString();
            //Texten hämtas från textrutan och tilldelas till variabeln som deklareras
            String kommentar = txtKommentar.getText();
            String datum = txtDatum.getText();
            String valdPrioritering = cbValjPrioritering.getSelectedItem().toString().toLowerCase();

            try {

                String[] namn = cbValjKund.getSelectedItem().toString().split(" ");

                String fornamn = namn[0];     // First part is the first name
                String efternamn = namn[1];   // Second part is the last name

                // Create SQL query to fetch the Kund_ID based on first name and last name
                String fragakundID = "SELECT Kund_ID FROM kund WHERE Förnamn = '" + fornamn + "' AND Efternamn = '" + efternamn + "'";

                // Execute the SQL query to fetch the Kund_ID
                String kundID = idb.fetchSingle(fragakundID);

                int orderId = Integer.parseInt(idb.fetchSingle("SELECT MAX(Order_ID) FROM Orders")) + 1;
                String orderIdString = Integer.toString(orderId);

                String fragaSkapaOrder = "";
                //SQL fråga för att skapa order
                //och villkor för att bestämma brådskande för order
                if (valdPrioritering.equalsIgnoreCase("Brådskande")) {
                    valdPrioritering = "1";
                    fragaSkapaOrder = "Insert into orders (Order_ID, Status, Kund, Kommentar, Brådskande, Datum) "
                            + "Values ('" + orderIdString + "','" + valdStatus + "','" + kundID + "','" + kommentar + "','" + valdPrioritering + "','" + datum + "')";
                    idb.insert(fragaSkapaOrder);
                }
                if (valdPrioritering.equalsIgnoreCase("Inte brådskande")) {
                    valdPrioritering = "0";
                    fragaSkapaOrder = "Insert into orders (Order_ID, Status, Kund, Kommentar, Brådskande, Datum) "
                            + "Values ('" + orderIdString + "','" + valdStatus + "','" + kundID + "','" + kommentar + "','" + valdPrioritering + "','" + datum + "')";
                    idb.insert(fragaSkapaOrder);

                }
                lblSparat.show();
                lblSparat.setText("Order är skapad!");

                //felmeddelande
            } catch (InfException ex) {
                System.out.println(ex);

            }
        } else {
            lblSparat.show();
            lblSparat.setText("Vänligen ange datum (yyyy-MM-dd)");
        }
    }//GEN-LAST:event_btnSparaOrderActionPerformed

    private void fyllBoxKund() {
        //Metod, fylla en combobox med kundnamn
        try {
            String fragaFyllBox = "Select Förnamn, Efternamn from kund order by Kund_ID";
            ArrayList<HashMap<String, String>> allaKunder = idb.fetchRows(fragaFyllBox);
            for (HashMap<String, String> kund : allaKunder) {
                //Kundens efternamn och förnamn hämtas 
                String fornamn = kund.get("Förnamn");
                String efternamn = kund.get("Efternamn");

                if (!fornamn.equalsIgnoreCase("Anonym")) {
                    //förnamn och efternamn kombineras för att läggas i combobox
                    cbValjKund.addItem(fornamn + " " + efternamn);
                }
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void cbValjKundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjKundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbValjKundActionPerformed

    private void btnOrderTotalsummaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderTotalsummaActionPerformed
        // TODO add your handling code here:
        String order2 = cbOrder2.getSelectedItem().toString().toLowerCase();
        double momsOchAvgift;
        double total = 0.0;
        double totalAvgift = 0;
        double totalMoms = 0;
        boolean braskande = false;
        double momsBelopp = 0.25;
        double procentAvgift = 0.20;

        try {
            String query = "SELECT Hatt.Pris "
                    + "FROM Hatt "
                    + "JOIN hatt_i_order ON Hatt.Produkt_ID = hatt_i_order.Hatt_ID "
                    + "WHERE hatt_i_order.Order_ID = '" + order2 + "'";

            double fraktkostnad = 0;
            String fraktkostnadStr = idb.fetchSingle("Select Fraktkostnad from paket_info where order_ID = " + order2);

            if (fraktkostnadStr != null) {
                fraktkostnad = Double.parseDouble(fraktkostnadStr);
            }

            ArrayList<HashMap<String, String>> allaPriser = idb.fetchRows(query);
            String fragaPrioritering = "Select Brådskande from orders where Order_ID = '" + order2 + "';";
            ArrayList<HashMap<String, String>> braskandeResultat = idb.fetchRows(fragaPrioritering);

            if (braskandeResultat.size() > 0) {
                String braskandeStatus = braskandeResultat.get(0).get("Brådskande");

                if (braskandeStatus.equals("1")) {
                    braskande = true;
                }
            }

            for (HashMap<String, String> pris : allaPriser) {
                double hatPrice = Double.parseDouble(pris.get("Pris"));
                // Addera priset till totalsumman
                total += hatPrice;

            }
            totalMoms = total * momsBelopp;

            double moms = 0.25 * total;
            double totaltMedMoms = total + moms;

            double bradskandeAvgift = 0.20 * totaltMedMoms;
            double totaltMedMomsOchBradskande = totaltMedMoms + bradskandeAvgift;
            if (braskande) {
                totalAvgift = total * procentAvgift;
                momsOchAvgift = total + totalMoms + totalAvgift;
                double totalSumma = totaltMedMomsOchBradskande + fraktkostnad;
                String avrundat = String.format("%.2f", totalSumma);
                System.out.println("Totalsumma för ordern är: " + avrundat);
                txtTotalSumma.setText(avrundat);

            } else {
                totalMoms = total * (1 + momsBelopp);
                momsOchAvgift = total + totalMoms;
                double totalSumma = totaltMedMoms + fraktkostnad;
                String avrundat = String.format("%.2f", totalSumma);
                System.out.println("Totalsumma för ordern är: " + avrundat);
                txtTotalSumma.setText(avrundat);
            }

            momsOchAvgift = totalMoms * totalAvgift;

        } catch (Exception ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }

    }//GEN-LAST:event_btnOrderTotalsummaActionPerformed

    private void randomFraktsedelnummer() {
        // Visar fraktsedeln med random fraktsedelsnummer
        try {
            String fraktNummer = randomBarcode();
            BufferedImage barcodeImage = barcodeBild(fraktNummer);

            //Gör barcode-storleken anpassad till fraktsedeln
            ImageIcon icon = new ImageIcon(barcodeImage);
            Image litenBarcode = icon.getImage();
            Image storreBarcode = litenBarcode.getScaledInstance(350, 150, java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(storreBarcode);
            lblBarcode1.setIcon(icon);

        } catch (Exception fel) {
            fel.printStackTrace();
        }
    }

    public static BufferedImage barcodeBild(String barcodeNummer) throws Exception {
        //Skapar bild för fraktsedelsbarcode
        Barcode barcode = BarcodeFactory.createEAN13(barcodeNummer);
        barcode.setFont(new Font(Font.SANS_SERIF, Font.PLAIN, 10));

        return BarcodeImageHandler.getImage(barcode);
    }

    private String randomBarcode() {
        //Random barcode 12-siffrig för fraktsedel 
        StringBuilder sb = new StringBuilder();
        java.util.Random random = new java.util.Random();
        for (int i = 0; i < 12; i++) {
            sb.append(random.nextInt(10));
        }
        return sb.toString();
    }

    private void btnOrderStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderStatusActionPerformed
        // TODO add your handling code here:
        String noll = "0";
        String ett = "1";
        String orderID = (String) cbOrderValj3.getSelectedItem();

        //visar status för order
        try {
            String status = idb.fetchSingle("Select Brådskande from Orders where Order_ID = " + orderID + "");

            String status2 = idb.fetchSingle("Select Status from Orders where Order_ID = " + orderID + "");

            if (status.equals(ett)) {
            } else {
            }

        } catch (Exception ex) {
        }
    }//GEN-LAST:event_btnOrderStatusActionPerformed

    private void btnSkapaFraktSedelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaFraktSedelActionPerformed
        // Skapar fraktsedelsutskrift
        try {
            Toolkit toolkit = pnlFraktSedel1.getToolkit();
            PrintJob printVal = toolkit.getPrintJob(this, null, null);
            Graphics grafik = printVal.getGraphics();
            pnlFraktSedel1.print(grafik);
            grafik.dispose();
            printVal.end();
        } catch (Exception fel) {
            fel.printStackTrace();
        }
    }//GEN-LAST:event_btnSkapaFraktSedelActionPerformed

    private void btnVisaFraktSedelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisaFraktSedelActionPerformed
        // Visar fraktsedeln med random fraktsedelsnummer
        randomFraktsedelnummer();
        String orderID = (String) cbOrderValj3.getSelectedItem();

        try {
            String forFraga = "SELECT Förnamn FROM kund WHERE Kund_ID in(SELECT Kund from orders where Order_ID='" + orderID + "')";
            ArrayList<String> namnLista = idb.fetchColumn(forFraga);
            for (String namn : namnLista) {
                lblForNamn1.setText(namn);
            }
            String efterFraga = "SELECT Efternamn FROM kund WHERE Kund_ID in(SELECT Kund from orders where Order_ID='" + orderID + "')";
            ArrayList<String> efternamnLista = idb.fetchColumn(efterFraga);
            for (String ettNamn : efternamnLista) {
                lblKundNamn1.setText(ettNamn);
            }
            String adressFraga = "SELECT Adress FROM Kund WHERE Kund_ID in(SELECT Kund from orders where Order_ID='" + orderID + "')";
            ArrayList<String> adressLista = idb.fetchColumn(adressFraga);
            for (String enAdress : adressLista) {
                lblKundAdress1.setText(enAdress);
            }
            String telefonFraga = "SELECT Telefon FROM Kund WHERE Kund_ID in(SELECT Kund FROM orders WHERE Order_ID='" + orderID + "')";
            ArrayList<String> telefonLista = idb.fetchColumn(telefonFraga);
            for (String enTelefon : telefonLista) {
                lblPhone1.setText("Phone: " + enTelefon);
            }
            /*String ordernummer = "SELECT Order_ID FROM order WHERE Order_ID='" + orderID + "'";
            ArrayList<String> orderLista = idb.fetchColumn(ordernummer);
            for (String enOrdernr : orderLista) {*/
            lblOrderNumber1.setText("Ordernumber: " + orderID);
            //}
            String payCustoms = "SELECT Varukod_tull FROM fraktsedel WHERE Frakt_ID IN (SELECT Fraktsedel FROM orders WHERE Order_ID=" + orderID + ")";
            ArrayList<String> payCustomsLista = idb.fetchColumn(payCustoms);
            for (String enPay : payCustomsLista) {
                lblPayCustoms1.setText("Paycustoms: " + enPay);
            }
            /* String contents = "SELECT Namn from hatt where Produkt_ID in(SELECT Hatt_ID from hatt_i_order WHERE ORDER_ID=" + orderID +")";
            String contents = "SELECT Hatt_ID FROM hatt_i_order WHERE Order_ID='" + orderID +"'";
            ArrayList<String> contentLista = idb.fetchColumn(contents);
            for (String enContent : contentLista) {
                lblContents.setText(enContent);
            } */
        } catch (InfException fel) {
            fel.printStackTrace();
        }
    }//GEN-LAST:event_btnVisaFraktSedelActionPerformed

    private void btnOrderStatus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderStatus1ActionPerformed
        String valdStatus = cbStatus.getSelectedItem().toString();
        String order1 = cbOrder4.getSelectedItem().toString().toLowerCase();
        try {
            String fragaUppdateraStatus = "Update Orders set Status='" + valdStatus + "' where Order_ID ='" + order1 + "'";
            idb.update(fragaUppdateraStatus);
            lblAndraStatus.setText("Status är ändrad");

        } catch (Exception ettUndantag) {
            System.out.println("Error: " + ettUndantag.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOrderStatus1ActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        lblValjHattMeddelande.setText("");
        // TODO add your handling code here:
        
        

        try {
            
            //Hämtar valt objekt från ComboBoxen samt konverterar det till sträng
            String valdOrder = cbOrder.getSelectedItem().toString();
            String valtMaterial = cbValjMaterial.getSelectedItem().toString();
            
            
             String hattNamn = cbValjAllaHattar.getSelectedItem().toString();
             
            //SQL-fråga för att få ProduktID från hatt
            String fragaProduktID = "select Produkt_ID from hatt where Namn = '" + hattNamn + "'";
            String ProduktID = idb.fetchSingle(fragaProduktID);
            String fragaMaterial = "select Material_ID from Material where Namn = '" + valtMaterial + "'";

            boolean allaFaltIfyllda
                    = Validering.harTextFaltetVarde(txtAngeStorlek, lblValjHattMeddelande)
                    && Validering.kollaDecimalTal(txtAngeStorlek, lblValjHattMeddelande);

            if (valtMaterial == null) {
            }

            String Material_ID = idb.fetchSingle(fragaMaterial);

            String fragaSkapaHattIOrder = "Insert into hatt_i_order (Order_ID, Hatt_ID, Material_ID, Storlek, Text) "
                    + "Values ('" + valdOrder + "','" + ProduktID + "','" + Material_ID + "','" + txtAngeStorlek.getText() + "','" + txtAngeTxt.getText() + "')";

            double totalSumma = 0;
            double uppdateratSumma = 0;
            String strSumma = idb.fetchSingle("Select Totalsumma from orders where order_ID = "+valdOrder);
            String strHattPris = idb.fetchSingle("Select pris from Hatt where Namn = '"+hattNamn+"'");
            if(strSumma!=null){
            
                totalSumma = Double.parseDouble(strSumma);
            }
            
            
             uppdateratSumma = Double.parseDouble(strHattPris) + totalSumma;
            String andradTotalSumma = "Update orders set Totalsumma = "+uppdateratSumma+" where order_ID = " + valdOrder;
            System.out.println(andradTotalSumma);
            
            idb.update(andradTotalSumma);
//            String fragaSkapaHattIOrder = "Insert into hatt_i_order (Order_ID, Hatt_ID) "
//                    + "Values ('" + valdOrder + "','" + ProduktID + "')";
            idb.insert(fragaSkapaHattIOrder);

            fyllInfo(cbOrder.getSelectedItem().toString());
            fyllLista(cbOrder.getSelectedItem().toString());
            fyllKostnad(cbOrder.getSelectedItem().toString());

            lblValjHattMeddelande.setText("Hatt är tillagd i en order!");
            pnlPlaneringsYta.hide();
            pnlPagaendeOrdern.show();

        } catch (InfException ettUndantag) {

            System.out.println("Error " + ettUndantag.getMessage());
        }
//        try {
//            //Hämtar valt objekt från ComboBoxen samt konverterar det till sträng
//            String valdOrder = cbOrder.getSelectedItem().toString().toLowerCase();
//            //SQL-fråga för att få ProduktID från hatt
//            String fragaProduktID = "select Produkt_ID from hatt where Namn = '" + cbValjAllaHattar.getSelectedItem().toString() + "'";
//            String ProduktID = idb.fetchSingle(fragaProduktID);
//
//            String fragaSkapaHattIOrder = "Insert into hatt_i_order (Order_ID, Hatt_ID, Storlek, Text) "
//                    + "Values ('" + valdOrder + "','" + ProduktID + "')";
//            idb.insert(fragaSkapaHattIOrder);
//
//            lblValjHattMeddelande.setText("Hatt är tillagd i en order!");
//
//        } catch (InfException ettUndantag) {
//            lblValjHattMeddelande.setText("Något gick fel!");
//            System.out.println("Error " + ettUndantag.getMessage());
//        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void cbValjAllaHattarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjAllaHattarActionPerformed
        // TODO add your handling code here:
        cbValjMaterial.removeAllItems();
        fyllBoxMaterial();
    }//GEN-LAST:event_cbValjAllaHattarActionPerformed

    private void cbValjMaterialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjMaterialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbValjMaterialActionPerformed

    private void personalTillHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalTillHattActionPerformed
        String komboId = orderLista.getSelectedValue();

        // Extrahera numeriskt kombo-ID genom att ta bort alla icke-numeriska tecken
        String intKomboId = komboId.replaceAll("[^0-9]", "");

        try {
            // Kontrollera om hatten är "ej tagen" innan personal tilldelas
            if (komboId.contains("ej tagen")) {

                String uppdateraPersonal = "UPDATE hatt_i_order SET personal_ID = " + persId + " WHERE kombo_ID = " + intKomboId + ";";
                String uppdateraStatus = "Update hatt_i_order Set Status = 'Påbörjad' Where Kombo_ID = " + intKomboId;

                idb.update(uppdateraPersonal);
                idb.update(uppdateraStatus);

                lblError.setText("");

                // Uppdatera gränssnittet med den uppdaterade orderns lista
                orders = getOrderLista();
                DefaultListModel<String> orderListModel = new DefaultListModel<>();
                for (String order : orders) {
                    orderListModel.addElement(order);
                }

                // Uppdatera JList med den nya listmodellen
                orderLista.setModel(orderListModel);
            } else {
                lblError.setText("Hatten har redan en angiven personal");
            }

        } catch (InfException ex) {

            System.out.println(ex);
            System.out.println(intKomboId);
        }
    }//GEN-LAST:event_personalTillHattActionPerformed

    private void taBortpersonalFranHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taBortpersonalFranHattActionPerformed

        String intKomboId = orderLista.getSelectedValue().replaceAll("[^0-9]", "");

        String taBortPersonalQuery = "Update hatt_i_order Set Personal_ID = NULL Where Kombo_ID = " + intKomboId + ";";
        String uppdateraStatus = "Update hatt_i_order Set Status = 'Ej Påbörjad' Where Kombo_ID = " + intKomboId;;

        try {

            String valdHatt = idb.fetchSingle("Select personal_ID from hatt_i_order where Kombo_ID = " + intKomboId);

            if (persId.equals(valdHatt)) {
                idb.update(taBortPersonalQuery);
                idb.update(uppdateraStatus);

                orders = getOrderLista();

                DefaultListModel<String> orderListModel = new DefaultListModel<>();
                for (String order : orders) {
                    orderListModel.addElement(order);
                }

                // Set the updated model to the orderLista JList
                orderLista.setModel(orderListModel);

                lblError.setText("");

            } else if (orderLista.getSelectedValue().contains("ej tagen")) {
                lblError.setText("Hatten har ingen personal");
            } else {
                lblError.setText("Du kan inte ta bort en annan personal");
            }
        } catch (InfException e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_taBortpersonalFranHattActionPerformed

    private void btnHattSidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHattSidaActionPerformed
        try {
            // TODO add your handling code here:
            String komboId = orderLista.getSelectedValue();

            if (komboId.startsWith("Order")) {
            } // Extrahera numeriskt kombo-ID genom att ta bort alla icke-numeriska tecken
            else {
                String intKomboId = komboId.replaceAll("[^0-9]", "");

                int hattId = parseInt(idb.fetchSingle("Select Hatt_ID from hatt_i_order Where Kombo_ID = " + intKomboId));

                new HattInformation(hattId).setVisible(true);
            }

        } catch (InfException ex) {
            Logger.getLogger(PlaneringsYta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHattSidaActionPerformed

    private void btnPaketinformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaketinformationActionPerformed
        // tar till paketinfo-sidan
        lblPaketInfoMeddelande.setText("");
        cbOrder3.removeAllItems();
        fyllBoxOrder();
        panelerGomda();
        pnlPaketinfo.show();
    }//GEN-LAST:event_btnPaketinformationActionPerformed

    private void btnSparaPaketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaPaketActionPerformed
        try {
            lblPaketInfoMeddelande.setText("");
            String vikt = txtAngeVikt.getText();
            String langd = txtAngeLangd.getText();
            String hojd = txtAngeHojd.getText();
            String bredd = txtAngeBredd.getText();
            String fraktkostnad = txtAngeFraktkostnad.getText();
            String orderBox = cbOrder3.getSelectedItem().toString();
            //ser till att text fälten har ifyllda värden och att dessa är heltal/decimaltal. För varje ruta
            boolean allaFaltIfyllda
                    = Validering.harTextFaltetVarde(txtAngeVikt, lblPaketInfoMeddelande)
                    && Validering.harTextFaltetVarde(txtAngeLangd, lblPaketInfoMeddelande)
                    && Validering.harTextFaltetVarde(txtAngeHojd, lblPaketInfoMeddelande)
                    && Validering.harTextFaltetVarde(txtAngeBredd, lblPaketInfoMeddelande)
                    && Validering.harTextFaltetVarde(txtAngeFraktkostnad, lblPaketInfoMeddelande)
                    && Validering.kollaDecimalTal(txtAngeFraktkostnad, lblPaketInfoMeddelande)
                    && Validering.kollaDecimalTal(txtAngeVikt, lblPaketInfoMeddelande)
                    && Validering.kollaDecimalTal(txtAngeLangd, lblPaketInfoMeddelande)
                    && Validering.kollaDecimalTal(txtAngeHojd, lblPaketInfoMeddelande)
                    && Validering.kollaDecimalTal(txtAngeBredd, lblPaketInfoMeddelande);

            if (allaFaltIfyllda) {
                //skapar paket ID
                String paketID = idb.fetchSingle("SELECT MAX(Paket_ID) FROM paket_info");
                int paketIDD = paketID != null ? Integer.parseInt(paketID) + 1 : 1;
                String paketIdString = Integer.toString(paketIDD);
                //ber om att sätta in värden i tabellen
                String fragaPaketInfo = "Insert into paket_info (Paket_ID, Order_ID, vikt, langd, bredd, hojd, fraktkostnad) "
                        + "Values (" + paketIdString + "," + orderBox + ",'" + vikt + "','" + langd + "','" + bredd + "','" + hojd + "','" + fraktkostnad + "')";

                ArrayList<String> orderIdIPaket = idb.fetchColumn("Select order_ID from paket_info");

                if (!orderIdIPaket.contains(orderBox)) {
                    idb.insert(fragaPaketInfo);
                    lblPaketInfoMeddelande.setText("Paketinformation har sparats.");
                } else {
                    lblPaketInfoMeddelande.setText("Ordern har redan ett registrerat paket, vänligen välj en annan order");
                }

            } else {
                lblPaketInfoMeddelande.setText("Vänligen fyll i alla rutor");
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_btnSparaPaketActionPerformed

    private void btnProduktdetaljerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProduktdetaljerActionPerformed
        // TODO add your handling code here:
        panelerGomda();
        cbProduktdetaljHatt.removeAllItems();
        fyllHatt();
        pnlProduktdetaljer.show();
    }//GEN-LAST:event_btnProduktdetaljerActionPerformed

    private void btnAndraProduktdetaljActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraProduktdetaljActionPerformed
        // ÄNDRAR PRODUKTDETALJ I HATT
        lblAndraProduktdetaljMeddelande.setText("");
        if (Validering.harTextFaltetVarde(txtProduktdetaljNamn, lblAndraProduktdetaljMeddelande)
                && Validering.harTextFaltetVarde(txtProduktdetaljPris, lblAndraProduktdetaljMeddelande)
                && Validering.harTextFaltetVarde(txtProduktdetaljModell, lblAndraProduktdetaljMeddelande)) {
            if (Validering.arDouble(txtProduktdetaljPris, lblAndraProduktdetaljMeddelande)) {
                try {
                    int godkand = 0;
                    Object selectedGodkand = cbProduktDetaljGodkand.getSelectedItem();
                    if (selectedGodkand.equals("Godkänd")) {
                        godkand = 1;
                    }
                    String hatt = (String) cbProduktdetaljHatt.getSelectedItem();

                    idb.update("UPDATE hatt SET Namn='" + txtProduktdetaljNamn.getText() + "', "
                            + "Pris='" + txtProduktdetaljPris.getText() + "', "
                            + "Modell='" + txtProduktdetaljModell.getText() + "', "
                            + "Godkänd='" + godkand + "' "
                            + "WHERE Namn='" + hatt + "';");
                    lblAndraProduktdetaljMeddelande.setText(txtProduktdetaljNamn.getText() + " har ändrats.");

                } catch (InfException fel) {
                    lblAndraProduktdetaljMeddelande.setText("Ett fel uppstod!");
                    fel.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_btnAndraProduktdetaljActionPerformed

    private void btnSparaOrder2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaOrder2ActionPerformed

        try {

            if (Validering.kollaDatumFormat(txtDatum, lblSparat)) {
                String status = cbValjStatus.getSelectedItem().toString();
                String prio = cbValjPrioritering.getSelectedItem().toString();
                String datum = txtDatum.getText();
                String kommentar = txtKommentar1.getText();
                int prioInt = 0;
                if (prio.equals("Brådskande")) {
                    prioInt = 1;
                }
                idb.update("Update orders set status = '" + status + "', brådskande = " + prioInt + ", kommentar = '" + kommentar + "', datum = '" + datum + "' where order_Id = " + lblOrderNummer.getText());
                lblSparat.show();
                lblSparat.setText("Ordern har sparats");
                fyllLista(lblVisaOrder.getText());
                txtSammanstallning.setText(sammanStallning(lblVisaOrder.getText()));
            } else {
                lblSparat.show();
                lblSparat.setText("Vänligen ange datum (yyyy-MM-dd)");
            }
        } catch (InfException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnSparaOrder2ActionPerformed

    private void btnKostnadsFröslagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKostnadsFröslagActionPerformed
        txtSammanstallning.setText("Hej " + lblKundNamn2.getText() + "! \n" + "Vi återkommer gällande din order. Vi har tagit fram ett kostnadsförslag enligt nedan \n" + sammanStallning(lblVisaOrder.getText()) + "\n Återkom via mail eller telefon för att bekräfta ordern. \n Med vänliga hälsningar, Ottos Hattmakeri");

    }//GEN-LAST:event_btnKostnadsFröslagActionPerformed

    private void btnTaBortHattActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortHattActionPerformed

        try {
            int indexValdHatt = listHattarIOrder.getSelectedIndex() + 1;
            String komboId = idb.fetchSingle("SELECT kombo_id FROM (SELECT kombo_id, ROW_NUMBER() OVER (ORDER BY kombo_id) as rownum FROM hatt_i_order where Order_ID = " + lblVisaOrder.getText() + " ) AS numbered_rows WHERE rownum = " + indexValdHatt);
            idb.delete("delete from hatt_i_order where Kombo_ID = " + komboId);
            fyllLista(lblVisaOrder.getText());
            txtSammanstallning.setText(sammanStallning(lblVisaOrder.getText()));
        } catch (InfException ex) {
            Logger.getLogger(PågåendeOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTaBortHattActionPerformed

    private void cbOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbOrderActionPerformed

    private void cbValjKundEpost2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjKundEpost2ActionPerformed
        // TODO add your handling code here:
        cbValjKundHatt1.removeAllItems();
        fyllBoxOrderKund();
    }//GEN-LAST:event_cbValjKundEpost2ActionPerformed

    private void cbValjKundHatt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjKundHatt1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbValjKundHatt1ActionPerformed

    private void btnOk3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOk3ActionPerformed
        // TODO add your handling code here:

        //Hämtar valt objekt från ComboBoxen samt konverterar det till sträng
        String valdGodkand = cbValjKundEpost2.getSelectedItem().toString();

        //   String ett = "1";
        int i = 1;

        try {

            String fragaHattID = "select Produkt_ID from hatt where Namn = '" + valdGodkand + "'";
            String HattID = idb.fetchSingle(fragaHattID);
            String fragaUppdateraGodkand = "Update hatt set Godkänd=" + i + " where Produkt_ID=" + HattID;
            idb.update(fragaUppdateraGodkand);
            lblLagerforaHattMsg.setText("Hatt är lagerförd!");
        } catch (Exception ettUndantag) {
            System.out.println("Error: " + ettUndantag.getMessage());
            lblLagerforaHattMsg.setText("Hatten ändrades inte");
        }
    }//GEN-LAST:event_btnOk3ActionPerformed

    public void fyllRullLista() {
        String sqlHamtaPersonalEpost = "SELECT Epost FROM kund";
        ArrayList<String> allPersonalEpost = new ArrayList<String>();
        try {
            allPersonalEpost = idb.fetchColumn(sqlHamtaPersonalEpost);

            for (String enEpost : allPersonalEpost) {

                if (!enEpost.equals("Anonym")) {
                    cbValjKundEpost.addItem(enEpost);
                }
            }

        } catch (InfException ex) {
            Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void fyllTextrutaMedBestallningshistorik() {
        String valdEpost = cbValjKundEpost.getSelectedItem().toString();

        String sqlHamtaKundID = "SELECT Kund_ID FROM Kund WHERE Epost = '" + valdEpost + "'";
        String kundID = "";
        try {
            kundID = idb.fetchSingle(sqlHamtaKundID);
        } catch (InfException ex) {
            Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sqlHamtaRelevantaOrdrar = "SELECT * FROM orders WHERE Kund = '" + kundID + "' ORDER BY Datum DESC";
        ArrayList<HashMap<String, String>> allaOrderID = new ArrayList<HashMap<String, String>>();
        try {
            allaOrderID = idb.fetchRows(sqlHamtaRelevantaOrdrar);
        } catch (InfException ex) {
            Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
        }

        String ettPar = "";

        ArrayList<String> ettParVarden = new ArrayList<String>();

        for (HashMap<String, String> order : allaOrderID) {
            for (String nyckel : order.keySet()) {
                if (nyckel.equals("Totalsumma") && order.get(nyckel) == null) {
                    ettPar = nyckel + " = 0";
                } else if (nyckel.equals("Kund")) {
                    String sqlHamtaFornamn = "SELECT Förnamn FROM Kund WHERE Kund_ID = " + order.get(nyckel);
                    String sqlHamtaEfternamn = "SELECT Efternamn FROM Kund WHERE Kund_ID = " + order.get(nyckel);

                    String fornamn = "";
                    String efternamn = "";

                    try {
                        fornamn = idb.fetchSingle(sqlHamtaFornamn);
                        efternamn = idb.fetchSingle(sqlHamtaEfternamn);

                    } catch (InfException ex) {
                        Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    ettPar = "Kund = " + fornamn + " " + efternamn;
                } else if (nyckel.equals("Order_ID")) {
                    ettPar = "Ordernummer = " + order.get(nyckel);
                } else if (nyckel.equals("Fraktsedel") && order.get(nyckel) == null) {
                    ettPar = nyckel + " = 0 st";
                } else if (nyckel.equals("Kommentar") && order.get(nyckel).equals("")) {
                    ettPar = nyckel + " = Ingen kommentar.";
                } else if (nyckel.equals("Fraktsedel") && order.get(nyckel) != null) {
                    ettPar = nyckel + " = " + order.get(nyckel) + " st";

                } else if (nyckel.equals("Brådskande") && Integer.parseInt(order.get(nyckel)) == 0) {
                    ettPar = nyckel + " = Nej";
                } else if (nyckel.equals("Brådskande") && Integer.parseInt(order.get(nyckel)) == 1) {
                    ettPar = nyckel + " = Ja";
                } else {
                    ettPar = nyckel + " = " + order.get(nyckel);
                }

                ettParVarden.add(ettPar + "\n");
            }

            String sqlHamtaHattar = "SELECT Hatt_ID FROm hatt_i_order WHERE Order_ID = " + order.get("Order_ID");
            ArrayList<String> allaHattarIOrder = new ArrayList<String>();
            try {
                allaHattarIOrder = idb.fetchColumn(sqlHamtaHattar);
            } catch (InfException ex) {
                Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
            }

            ArrayList<String> allaHattNamn = new ArrayList<String>();

            for (String hatt : allaHattarIOrder) {
                String sqlHamtaHattNamn = "SELECT Namn FROM Hatt WHERE Produkt_ID = " + hatt;
                String ettHattNamn = "";
                try {
                    ettHattNamn = idb.fetchSingle(sqlHamtaHattNamn);
                } catch (InfException ex) {
                    Logger.getLogger(Bestallningshistorik.class.getName()).log(Level.SEVERE, null, ex);
                }
                allaHattNamn.add(ettHattNamn);

            }

            ettParVarden.add("Hattar i order: ");
            for (String hattNamn : allaHattNamn) {
                ettParVarden.add(hattNamn);
            }

            ettParVarden.add("\n");
            ettParVarden.add("\n");

        }

        jtxtBestallningsHistorik.setText(ettParVarden + "\n");

    }

    private void btnPersonalsidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPersonalsidaActionPerformed
        // TODO add your handling code here:
        panelerGomda();
        pnlPersonalsida.show();
    }//GEN-LAST:event_btnPersonalsidaActionPerformed

    private void btnRedigeraPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedigeraPersonalActionPerformed
        // Redigerar personal information
        if (Validering.harTextFaltetVarde(txtRedigeraPersonalFornamn, lblRedigeraPersonalMeddelande)
                && Validering.harTextFaltetVarde(txtRedigeraPersonalEfternamn, lblRedigeraPersonalMeddelande)
                && Validering.harTextFaltetVarde(pwdRedigeraPersonalLosenord, lblRedigeraPersonalMeddelande)
                && Validering.harTextFaltetVarde(txtRedigeraPersonalEpost, lblRedigeraPersonalMeddelande)) {
            try {
                idb.update("UPDATE personal SET Förnamn='" + txtRedigeraPersonalFornamn.getText() + "', "
                        + "Efternamn='" + txtRedigeraPersonalEfternamn.getText() + "', "
                        + "Epost='" + txtRedigeraPersonalEpost.getText() + "', "
                        + "Lösenord='" + pwdRedigeraPersonalLosenord.getText().toString() + "' "
                        + "WHERE Epost='" + cbRedigeraPersonal.getSelectedItem().toString() + "';");
                lblRedigeraPersonalMeddelande.setText("Personal har ändrats.");
            } catch (InfException fel) {
                lblRedigeraPersonalMeddelande.setText("Ett fel uppstod!");
                fel.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnRedigeraPersonalActionPerformed

    private void fyllPersonalEpost() {
        String fraga = "SELECT Epost FROM personal";
        try {
            ArrayList<String> epost = idb.fetchColumn(fraga);
            for (String enEpost : epost) {
                cbRedigeraPersonal.addItem(enEpost);
                cbTaBortPersonal.addItem(enEpost);
            }
        } catch (InfException fel) {
            fel.printStackTrace();
        }
    }

    private boolean taBortPersonal() {
        try {

            String ruta = (String) cbTaBortPersonal.getSelectedItem();
            String fraga = "SELECT Personal_ID, Epost FROM personal";
            boolean hittad = false;

            ArrayList<HashMap<String, String>> personal = idb.fetchRows(fraga);

            for (HashMap<String, String> enPersonal : personal) {
                String id = enPersonal.get("Personal_ID");
                String epost = enPersonal.get("Epost");

                if (ruta.equalsIgnoreCase(epost)) {
                    idb.update("UPDATE tillverka SET Personal=NULL WHERE Personal='" + id + "'");
                    idb.update("UPDATE hatt_i_order SET Personal_ID=NULL WHERE Personal_ID='" + id + "'");
                    idb.delete("DELETE from personal WHERE Epost='" + ruta + "'");
                    lblTaBortPersonalMeddelande.setText(epost + " har raderats.");
                    hittad = true;
                    return true;
                }
            }

        } catch (InfException fel) {
            lblTaBortPersonalMeddelande.setText("Ett fel uppstod!");
            fel.printStackTrace();
        }
        return false;
    }

    private void txtRedigeraPersonalFornamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRedigeraPersonalFornamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRedigeraPersonalFornamnActionPerformed

    private void pwdRedigeraPersonalLosenordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdRedigeraPersonalLosenordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdRedigeraPersonalLosenordActionPerformed

    private void btnTaBortPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortPersonalActionPerformed
        // tar bort en personal
        lblTaBortPersonalMeddelande.setText("");
        taBortPersonal();
        cbTaBortPersonal.removeAllItems();
        fyllPersonalEpost();
    }//GEN-LAST:event_btnTaBortPersonalActionPerformed

    private void btnManadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManadActionPerformed
        // TODO add your handling code here:

        String valtAr = cbAr.getSelectedItem().toString();

        String valdManad = cbManad.getSelectedItem().toString();
        String manadIDatumFormatStart = "";
        String manadIDatumFormatSlut = "";

        if (valdManad.equals("Januari")) {
            manadIDatumFormatStart = "01";
            manadIDatumFormatSlut = "01-31";
        }

        if (valdManad.equals("Februari")) {
            manadIDatumFormatStart = "02";
            manadIDatumFormatSlut = "02-28";
        }

        if (valdManad.equals("Mars")) {
            manadIDatumFormatStart = "03";
            manadIDatumFormatSlut = "03-31";
        }

        if (valdManad.equals("April")) {
            manadIDatumFormatStart = "04";
            manadIDatumFormatSlut = "04-30";
        }

        if (valdManad.equals("Maj")) {
            manadIDatumFormatStart = "05";
            manadIDatumFormatSlut = "05-31";
        }
        if (valdManad.equals("Juni")) {
            manadIDatumFormatStart = "06";
            manadIDatumFormatSlut = "06-30";
        }
        if (valdManad.equals("Juli")) {
            manadIDatumFormatStart = "07";
            manadIDatumFormatSlut = "07-31";
        }
        if (valdManad.equals("Augusti")) {
            manadIDatumFormatStart = "08";
            manadIDatumFormatSlut = "08-31";
        }

        if (valdManad.equals("September")) {
            manadIDatumFormatStart = "09";
            manadIDatumFormatSlut = "09-30";
        }

        if (valdManad.equals("Oktober")) {
            manadIDatumFormatStart = "10";
            manadIDatumFormatSlut = "10-31";
        }

        if (valdManad.equals("November")) {
            manadIDatumFormatStart = "11";
            manadIDatumFormatSlut = "11-30";
        }

        if (valdManad.equals("December")) {
            manadIDatumFormatStart = "12";
            manadIDatumFormatSlut = "12-31";
        }

        ArrayList<String> materialSomSkaSkrivasUt = new ArrayList<String>();

        String sqlHamtaManadsforsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum>= '" + valtAr + "-" + manadIDatumFormatStart + "-01' && Datum<='" + valtAr + "-" + manadIDatumFormatSlut + "'";

        String sqlHamtaManad = "SELECT Order_ID FROM orders WHERE DATUM>= '" + valtAr + "-" + manadIDatumFormatStart + "-01' && Datum<='" + valtAr + "-" + manadIDatumFormatSlut + "'";

        try {
            String totalForsaljningsSumma = idb.fetchSingle(sqlHamtaManadsforsaljning);

            ArrayList<String> orderIDAttHamtaMaterialIDMed = idb.fetchColumn(sqlHamtaManad);
            ArrayList<String> relevantaMaterialID = new ArrayList<String>();
            ArrayList<String> materialNamn = new ArrayList<String>();
            for (String orderID : orderIDAttHamtaMaterialIDMed) {
                String sqlHamtaMaterialID = "SELECT Material_ID FROM hatt_i_order WHERE Order_ID = " + orderID;
                String ettMaterialID = idb.fetchSingle(sqlHamtaMaterialID);
                relevantaMaterialID.add(ettMaterialID);
            }
            for (String materialID : relevantaMaterialID) {
                String sqlHamtaMaterialNamn = "SELECT Namn FROM Material WHERE Material_ID = " + materialID;
                String ettMaterialNamn = idb.fetchSingle(sqlHamtaMaterialNamn);
                materialNamn.add(ettMaterialNamn);
            }

            String sqlHamtaAlltMaterial = "SELECT Namn FROM material";
            ArrayList<String> alltMaterial = idb.fetchColumn(sqlHamtaAlltMaterial);

            for (String ettMaterial : alltMaterial) {
                int antalMaterial = Collections.frequency(materialNamn, ettMaterial);
                if (antalMaterial == 1) {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hatt av " + ettMaterial + "\n");
                } else {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hattar av " + ettMaterial + "\n");
                }

                if (totalForsaljningsSumma == null) {
                    txtStatistik.setText("Total försäljning år " + valtAr + ", " + valdManad + ": 0 SEK \n \n" + materialSomSkaSkrivasUt);
                } else {
                    txtStatistik.setText("Total försäljning år " + valtAr + ", " + valdManad + ": " + totalForsaljningsSumma + " SEK \n \n" + materialSomSkaSkrivasUt);
                }
            }
        } catch (InfException ex) {
            Logger.getLogger(Statistik1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnManadActionPerformed

    public void fyllAr() {
        String hamtaAr = "SELECT DISTINCT YEAR(Datum) AS År FROM hattmakarna.orders ORDER BY År DESC";
        int i = 0;
        try {
            ArrayList<String> allaAr = idb.fetchColumn(hamtaAr);

            for (String ar : allaAr) {
                String aret = ar.substring(0, 4);
                if (aret.equals("2024")) {

                } else {
                    cbAr.insertItemAt(aret, i);
                }
                i++;
            }

        } catch (InfException ex) {
            Logger.getLogger(Statistik1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnArActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArActionPerformed
        // TODO add your handling code here:
        String valtAr = cbAr.getSelectedItem().toString();

        String sqlHamtaArsforsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum<= '" + valtAr + "-12-31' && Datum>='" + valtAr + "-01-01'";

        String sqlHamtaAr = "SELECT Order_ID FROM Orders WHERE Datum<= '" + valtAr + "-12-31' && Datum>='" + valtAr + "-01-01'";

        try {
            String totalForsaljningsSumma = idb.fetchSingle(sqlHamtaArsforsaljning);

            ArrayList<String> orderIDAttHamtaMaterialIDMed = idb.fetchColumn(sqlHamtaAr);
            ArrayList<String> relevantaMaterialID = new ArrayList<String>();
            ArrayList<String> materialNamn = new ArrayList<String>();
            for (String orderID : orderIDAttHamtaMaterialIDMed) {
                String sqlHamtaMaterialID = "SELECT Material_ID FROM hatt_i_order WHERE Order_ID = " + orderID;
                String ettMaterialID = idb.fetchSingle(sqlHamtaMaterialID);
                relevantaMaterialID.add(ettMaterialID);
            }
            for (String materialID : relevantaMaterialID) {
                String sqlHamtaMaterialNamn = "SELECT Namn FROM Material WHERE Material_ID = " + materialID;
                String ettMaterialNamn = idb.fetchSingle(sqlHamtaMaterialNamn);
                materialNamn.add(ettMaterialNamn);
            }

            String sqlHamtaAlltMaterial = "SELECT Namn FROM material";
            ArrayList<String> alltMaterial = idb.fetchColumn(sqlHamtaAlltMaterial);

            ArrayList<String> materialSomSkaSkrivasUt = new ArrayList<String>();

            for (String ettMaterial : alltMaterial) {
                int antalMaterial = Collections.frequency(materialNamn, ettMaterial);
                if (antalMaterial == 1) {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hatt av " + ettMaterial + "\n");
                } else {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hattar av " + ettMaterial + "\n");
                }
            }

            txtStatistik.setText("Total försäljning år " + valtAr + ": " + totalForsaljningsSumma + " SEK \n \n " + materialSomSkaSkrivasUt);
        } catch (InfException ex) {
            Logger.getLogger(Statistik1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnArActionPerformed

    private void btnKvartalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKvartalActionPerformed
        // TODO add your handling code here:

        String valtAr = cbAr.getSelectedItem().toString();

        String valtKvartal = cbKvartal.getSelectedItem().toString();

        String sqlHamtaKvartalsForsaljning = "";

        String sqlHamtaKvartal = "";

        if (cbKvartal.getSelectedItem().toString().equals("Q1")) {
            sqlHamtaKvartalsForsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum<= '" + valtAr + "-03-31' && Datum>='" + valtAr + "-01-01'";

            sqlHamtaKvartal = "SELECT Order_ID FROM Orders WHERE Datum<= '" + valtAr + "-03-31' && Datum>='" + valtAr + "-01-01'";

        }

        if (cbKvartal.getSelectedItem().toString().equals("Q2")) {
            sqlHamtaKvartalsForsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum<= '" + valtAr + "-06-30' && Datum>='" + valtAr + "-04-01'";
            sqlHamtaKvartal = "SELECT Order_ID FROM Orders WHERE Datum<= '" + valtAr + "-06-30' && Datum>='" + valtAr + "-04-01'";

        }

        if (cbKvartal.getSelectedItem().toString().equals("Q3")) {
            sqlHamtaKvartalsForsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum<= '" + valtAr + "-09-30' && Datum>='" + valtAr + "-07-01'";
            sqlHamtaKvartal = "SELECT Order_ID FROM Orders WHERE Datum<= '" + valtAr + "-09-30' && Datum>='" + valtAr + "-07-01'";

        }

        if (cbKvartal.getSelectedItem().toString().equals("Q4")) {
            sqlHamtaKvartalsForsaljning = "SELECT SUM(Totalsumma) AS Årssumma FROM Orders WHERE Datum<= '" + valtAr + "-12-31' && Datum>='" + valtAr + "-10-01'";
            sqlHamtaKvartal = "SELECT Order_ID FROM Orders WHERE Datum<= '" + valtAr + "-12-31' && Datum>='" + valtAr + "-10-01'";

        }

        try {

            ArrayList<String> orderIDAttHamtaMaterialIDMed = idb.fetchColumn(sqlHamtaKvartal);
            ArrayList<String> relevantaMaterialID = new ArrayList<String>();
            ArrayList<String> materialNamn = new ArrayList<String>();
            for (String orderID : orderIDAttHamtaMaterialIDMed) {
                String sqlHamtaMaterialID = "SELECT Material_ID FROM hatt_i_order WHERE Order_ID = " + orderID;
                String ettMaterialID = idb.fetchSingle(sqlHamtaMaterialID);
                relevantaMaterialID.add(ettMaterialID);
            }
            for (String materialID : relevantaMaterialID) {
                String sqlHamtaMaterialNamn = "SELECT Namn FROM Material WHERE Material_ID = " + materialID;
                String ettMaterialNamn = idb.fetchSingle(sqlHamtaMaterialNamn);
                materialNamn.add(ettMaterialNamn);
            }

            String sqlHamtaAlltMaterial = "SELECT Namn FROM material";
            ArrayList<String> alltMaterial = idb.fetchColumn(sqlHamtaAlltMaterial);

            ArrayList<String> materialSomSkaSkrivasUt = new ArrayList<String>();

            for (String ettMaterial : alltMaterial) {
                int antalMaterial = Collections.frequency(materialNamn, ettMaterial);
                if (antalMaterial == 1) {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hatt av " + ettMaterial + "\n");
                } else {
                    materialSomSkaSkrivasUt.add(antalMaterial + " hattar av " + ettMaterial + "\n");
                }

                String totalForsaljningsSumma = idb.fetchSingle(sqlHamtaKvartalsForsaljning);
                if (totalForsaljningsSumma == null) {
                    txtStatistik.setText("Total försäljning år " + valtAr + ", " + valtKvartal + ": 0 SEK \n \n" + materialSomSkaSkrivasUt);
                } else {
                    txtStatistik.setText("Total försäljning år " + valtAr + ", " + valtKvartal + ": " + totalForsaljningsSumma + " SEK \n \n" + materialSomSkaSkrivasUt);

                }
            }
        } catch (InfException ex) {
            Logger.getLogger(Statistik1.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnKvartalActionPerformed

    private void cbValjKundEpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbValjKundEpostActionPerformed
        // TODO add your handling code here:
        fyllTextrutaMedBestallningshistorik();
    }//GEN-LAST:event_cbValjKundEpostActionPerformed

    private void btnStatistikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatistikActionPerformed
        // TODO add your handling code here:
        panelerGomda();
        pnlStatistik.show();
    }//GEN-LAST:event_btnStatistikActionPerformed

    private void fyllHatt() {
        String fraga = "SELECT Namn FROM hatt";
        try {
            ArrayList<String> hatt = idb.fetchColumn(fraga);
            for (String enHatt : hatt) {
                cbProduktdetaljHatt.addItem(enHatt);
            }
        } catch (InfException fel) {
            fel.printStackTrace();
        }
    }

    private ArrayList<String> getPersonalIdLista() {

        ArrayList<String> personalIds = new ArrayList<>();

        try {
            personalIds = idb.fetchColumn("Select personal_ID from personal");
        } catch (InfException e) {
            System.out.println(e);
        }

        return personalIds;

    }

    private ArrayList<String> getOrderLista() {

        ArrayList<String> ordersLista = new ArrayList<>();
        try {
            // Hämta rader från 'hatt_i_order' och bearbeta dem för att skapa en lista med orderdetaljer
            ArrayList<HashMap<String, String>> raderILista = idb.fetchRows("Select * from hatt_i_order order by order_id");
            int i = 0;

            //loopar genom ArrayListan "raderILista"
            for (HashMap<String, String> enRad : raderILista) {
                String orderId = enRad.get("Order_ID");
                int orderInt = Integer.parseInt(orderId);

                String kombo_ID = enRad.get("Kombo_ID");

                String hattNamn = idb.fetchSingle("Select modell from hatt where produkt_id = " + enRad.get("Hatt_ID"));

                String personalNamn = idb.fetchSingle("Select förnamn from personal where personal_id = " + enRad.get("Personal_ID"));

                String status = idb.fetchSingle("Select Status from hatt_i_order where kombo_ID = " + enRad.get("Kombo_ID"));

                if (personalNamn == null) {
                    personalNamn = "ej tagen";
                    status = "Ej Påbörjad";
                }

                //kollar att orderID:t inte redan tillagd som en item till listan 
                if (orderInt > i) {
                    ordersLista.add("Order: " + orderId);
                    i = orderInt;
                }

                ordersLista.add("(" + kombo_ID + ")                         " + hattNamn + "       -       " + personalNamn + "      -       " + status);

            }

        } catch (InfException ex) {
            Logger.getLogger(PlaneringsYta.class.getName()).log(Level.SEVERE, null, ex);
        }

        return ordersLista;
    }

    private void fyllBoxHattar() {
        //fyller combobox med hattar
        String fragaFyllBox = "Select Namn from hatt order by Produkt_ID";
        ArrayList<String> allaHattar;
        try {
            allaHattar = idb.fetchColumn(fragaFyllBox);
            //Varje hatt i listan av hattar itereras över
            for (String hatt : allaHattar) {
                //Hattens namn läggs till i comboboxen
                cbValjAllaHattar.addItem(hatt);
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxKundEmail() {
        //fyll combobox med order
        String fragaFyllBox = "Select Epost from kund order by Kund_ID";
        ArrayList<String> allaKunder;
        try {
            allaKunder = idb.fetchColumn(fragaFyllBox);
            for (String epost : allaKunder) {

                if (epost.equals("Anonym")) {
                } else {
                    cbValjKundEpost2.addItem(epost);
                }
            }
        } catch (Exception ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxOrderKund() {
//        //fyll combobox med order
////        String fragaFyllBox = "SELECT hatt.Namn FROM Hatt JOIN hatt_i_order ON hatt.Produkt_ID = hatt_i_order.Hatt_ID\n" +
////        "JOIN Orders ON hatt_i_order.Order_ID = orders.Order_ID\n" +
////        "JOIN Kund ON orders.Kund = kund.Kund_ID\n" +
////        "WHERE hatt.Godkänd = 0 \n" +
////        "AND kund.Epost = '" + epost +"'"; 
////             
////         String fragaFyllBox = "SELECT hatt.Namn FROM Hatt JOIN hatt_i_order ON hatt.Produkt_ID = hatt_i_order.Hatt_ID " +
////        "JOIN Orders ON hatt_i_order.Order_ID = orders.Order_ID " +
////        "JOIN Kund ON orders.Kund = kund.Kund_ID " +
////        "WHERE hatt.Godkänd = 0 " +
////        "AND kund.Epost = '" + cbValjKundEpost1.getSelectedItem() + "'"; 
////         
        String fragaFyllBox = "SELECT hatt.Namn "
                + "FROM Hatt "
                + "JOIN hatt_i_order ON hatt.Produkt_ID = hatt_i_order.Hatt_ID "
                + "JOIN Orders ON hatt_i_order.Order_ID = orders.Order_ID "
                + "JOIN Kund ON orders.Kund = kund.Kund_ID "
                + "WHERE hatt.Godkänd = 0 "
                + "AND kund.Epost = '" + cbValjKundEpost2.getSelectedItem() + "'";
////         String fragaFyllBox = "SELECT hatt.Namn FROM Hatt JOIN hatt_i_order ON hatt.Produkt_ID = hatt_i_order.Hatt_ID\n" +
////        "JOIN Orders ON hatt_i_order.Order_ID = orders.Order_ID\n" +
////        "JOIN Kund ON orders.Kund = kund.Kund_ID\n" +
////        "WHERE hatt.Godkänd = 0 \n" +
////        "AND kund.Epost = '" + cbValjKundEpost1.getSelectedItem() + "'"; 
////             
//                //String fragaFyllBox = "Select Namn from Material Where Material_ID IN (Select Material_ID from material_i_Hatt where Hatt_ID = (Select produkt_ID from Hatt where Namn = '" + cbValjAllaHattar.getSelectedItem() + "'))";
//    
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
//            if (allaOrder.isEmpty()) {
//    } else {
//        // Annars fyll comboboxen med de hattar som hämtades

            for (String hatt : allaOrder) {
                cbValjKundHatt1.addItem(hatt);
            }

//            allaOrder = idb.fetchColumn(fragaFyllBox);
//             cbValjKundHatt.removeAllItems();
//            for (String hatt : allaOrder) {
//                cbValjKundHatt.addItem(hatt);
//            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxOrder3() {
        //fyll combobox med order
        String avslutad = "Avslutad";
        String fragaFyllBox = "Select Order_ID from orders where Status != '" + avslutad + "' order by Datum DESC";
        ArrayList<String> allaOrder;
        try {
            allaOrder = idb.fetchColumn(fragaFyllBox);
            for (String hatt : allaOrder) {
                cbOrder.addItem(hatt);
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void fyllBoxMaterial() {
        //fyll combobox med order
        String fragaFyllBox = "Select Namn from Material Where Material_ID IN (Select Material_ID from material_i_Hatt where Hatt_ID = (Select Produkt_ID from Hatt where Namn = '" + cbValjAllaHattar.getSelectedItem().toString() + "'))";
        ArrayList<String> allaMaterialIHatt;
        try {
            allaMaterialIHatt = idb.fetchColumn(fragaFyllBox);
            for (String material : allaMaterialIHatt) {
                cbValjMaterial.addItem(material);
            }
        } catch (InfException ettUndantag) {
            System.out.println("Error " + ettUndantag.getMessage());
        }
    }

    private void listHatt() {
        try {
            //SQL-fråga, hämtar namn på godkända hattar
            String fragaHatt = "Select Namn from hatt where Godkänd = 1";
            ArrayList<String> listHatt = idb.fetchColumn(fragaHatt);
            //Ny DefaultListModel skapas för att ha hattarnas namn
            DefaultListModel<String> modelListHatt = new DefaultListModel<>();
            //Varje hatt-namn loopas genom i listan och läggs till i modellen
            for (String hattNamn : listHatt) {
                modelListHatt.addElement(hattNamn);
                list1.setModel(modelListHatt);

            }
        } catch (Exception ettUndantag) {

        }
    }

    private void listHattSpecial() {
        try {

            String fragaHatt = "Select Namn from hatt where Godkänd = 0";
            ArrayList<String> listHatt = idb.fetchColumn(fragaHatt);
            DefaultListModel<String> modelListHatt = new DefaultListModel<>();
            for (String hattNamn : listHatt) {
                modelListHatt.addElement(hattNamn);
                list2.setModel(modelListHatt);

            }
        } catch (Exception ettUndantag) {

        }

    }

    private void fyllMaterial() {

        try {

            ArrayList<String> materialLista = idb.fetchColumn("Select Namn from Material");

            for (String material : materialLista) {
                cbValjMaterialVidSkapa.addItem(material);
            }

        } catch (InfException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private double orderKalkylator(String orderId, String bradskande) {

        double summa = 0;
        try {
            ArrayList<String> hattarIOrder = idb.fetchColumn("SELECT hatt_ID FROM hatt_i_order where order_ID = " + orderId);

            for (String hattId : hattarIOrder) {
                String hattPris = idb.fetchSingle("Select Pris from hatt where produkt_ID = " + hattId);
                summa += Double.parseDouble(hattPris);
            }

            if (bradskande.equals("1")) {
                summa = summa * 1.2;
            }

            //moms
            summa = summa * 1.25;
            summa = Math.round(summa * 100.0) / 100.0;

        } catch (InfException ex) {
            Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return summa;

    }

    private void fyllOrderLista2() {
        try {
            DefaultListModel<String> listModel = new DefaultListModel<>();
            listPaborjadeOrdrar.setModel(listModel);

            ArrayList<HashMap<String, String>> paborjadList = idb.fetchRows("Select * from orders");
            for (HashMap<String, String> orderRad : paborjadList) {
                String orderId = "OrderNR: " + orderRad.get("Order_ID") + " | ";
                String status = "Status: " + orderRad.get("Status") + " | ";
                String datum = "Datum: " + orderRad.get("Datum") + " | ";
                String kommentar = "";
                if (orderRad.get("Kommentar") == null) {
                    kommentar = "Kommentar: | ";
                } else {
                    kommentar = "Kommentar: " + orderRad.get("Kommentar") + " | ";
                }

                String kundForNamn = idb.fetchSingle("Select Förnamn from Kund where Kund_ID = " + orderRad.get("Kund"));
                String kundEfterNamn = idb.fetchSingle("Select Efternamn from Kund where Kund_ID = " + orderRad.get("Kund"));
                String kund = "Kund: " + kundForNamn + " " + kundEfterNamn + " | ";

                String bradskande = "";

                if (orderRad.get("Brådskande").equals("0")) {
                    bradskande = "Brådskande: Nej | ";
                } else {
                    bradskande = "Brådskande: Ja | ";
                }

                String summa = Double.toString(orderKalkylator(orderRad.get("Order_ID"), orderRad.get("Brådskande")));
                String totalSumma = "";

                if (summa.equals("0")) {
                    totalSumma = "Totalsumma: ";
                } else {
                    totalSumma = "Totalsumma: " + summa;
                }

                if (!orderRad.get("Status").equals("Avslutad")) {
                    listModel.addElement(orderId + status + datum + kommentar + kund + bradskande + totalSumma);
                }
            }

        } catch (InfException fel) {
        }
    }

    private void fyllOrderLista() {
        try {
            DefaultListModel<String> listModel = new DefaultListModel<>();
            listPaborjadeOrdrar.setModel(listModel);

            ArrayList<HashMap<String, String>> paborjadList = idb.fetchRows("Select * from orders where Totalsumma is null or Brådskande is null or Status is null or Datum is null or fraktsedel is null or kommentar is null");
            for (HashMap<String, String> orderRad : paborjadList) {
                StringBuilder radTextBuilder = new StringBuilder(); // StringBuilder for efficient string concatenation
                ArrayList<String> columnsForRow = new ArrayList<>(orderRad.keySet()); // List of column names for the current row
                for (String kolumn : columnsForRow) {
                    String varde = orderRad.get(kolumn);
                    if (varde == null) {
                        varde = "ej angivet";
                    }
                    String columnValuePair = kolumn + ": " + varde + " | "; // Build string for each key-value pair
                    radTextBuilder.append(columnValuePair); // Append to StringBuilder
                }
                String radText = radTextBuilder.toString(); // Trim extra spaces and add to list model
                listModel.addElement(radText);
            }

        } catch (InfException fel) {
        }
    }

    private void panelerGomda() {
        //Alla gömda paneler samlade i en metod för att förenkla koden
        pnlKund.hide();
        pnlHattar.hide();
        pnlPersonalsida.hide();
        pnlOrdersida.hide();
        pnlValjHatt.hide();
        pnlRedigeraKund.hide();
        pnlStartsida.hide();
        pnlSkapaOrder.hide();
        pnlVisaMaterial.hide();
        pnlPaketinfo.hide();
        pnlProduktdetaljer.hide();
        pnlPersonalsida.hide();
        pnlStatistik.hide();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAndraProduktdetalj;
    private javax.swing.JButton btnAr;
    private javax.swing.JButton btnHattSida;
    private javax.swing.JButton btnHattar;
    private javax.swing.JButton btnKostnadsFröslag;
    private javax.swing.JButton btnKund;
    private javax.swing.JButton btnKvartal;
    private javax.swing.JButton btnLoggaUt;
    private javax.swing.JButton btnManad;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnOk3;
    private javax.swing.JButton btnOrderStatus;
    private javax.swing.JButton btnOrderStatus1;
    private javax.swing.JButton btnOrderTotalsumma;
    private javax.swing.JButton btnOrdersida;
    private javax.swing.JButton btnPaketinformation;
    private javax.swing.JButton btnPersonalsida;
    private javax.swing.JButton btnProduktdetaljer;
    private javax.swing.JButton btnRedigeraKund1;
    private javax.swing.JButton btnRedigeraPersonal;
    private javax.swing.JButton btnSkapaFraktSedel;
    private javax.swing.JButton btnSkapaOrder;
    private javax.swing.JButton btnSpara;
    private javax.swing.JButton btnSparaKund;
    private javax.swing.JButton btnSparaOrder;
    private javax.swing.JButton btnSparaOrder2;
    private javax.swing.JButton btnSparaPaket;
    private javax.swing.JButton btnStartsida;
    private javax.swing.JButton btnStatistik;
    private javax.swing.JButton btnTaBortHatt;
    private javax.swing.JButton btnTaBortKund;
    private javax.swing.JButton btnTaBortPersonal;
    private javax.swing.JButton btnValjHatt;
    private javax.swing.JButton btnValjOrder;
    private javax.swing.JButton btnVisaFraktSedel;
    private javax.swing.JButton btnVisaMaterialinfo;
    private javax.swing.JComboBox<String> cbAndraFyllEpost;
    private javax.swing.JComboBox<String> cbAr;
    private javax.swing.JComboBox<String> cbKundEpost;
    private javax.swing.JComboBox<String> cbKvartal;
    private javax.swing.JComboBox<String> cbManad;
    private javax.swing.JComboBox<String> cbOrder;
    private javax.swing.JComboBox<String> cbOrder2;
    private javax.swing.JComboBox<String> cbOrder3;
    private javax.swing.JComboBox<String> cbOrder4;
    private javax.swing.JComboBox<String> cbOrderValj3;
    private javax.swing.JComboBox<String> cbProduktDetaljGodkand;
    private javax.swing.JComboBox<String> cbProduktdetaljHatt;
    private javax.swing.JComboBox<String> cbRedigeraPersonal;
    private javax.swing.JComboBox<String> cbStatus;
    private javax.swing.JComboBox<String> cbTaBortPersonal;
    private javax.swing.JComboBox<String> cbValjAllaHattar;
    private javax.swing.JComboBox<String> cbValjKund;
    private javax.swing.JComboBox<String> cbValjKundEpost;
    private javax.swing.JComboBox<String> cbValjKundEpost2;
    private javax.swing.JComboBox<String> cbValjKundHatt1;
    private javax.swing.JComboBox<String> cbValjMaterial;
    private javax.swing.JComboBox<String> cbValjMaterialVidSkapa;
    private javax.swing.JComboBox<String> cbValjModell;
    private javax.swing.JComboBox<String> cbValjPrioritering;
    private javax.swing.JComboBox<String> cbValjStatus;
    private javax.swing.JComboBox<String> cbValjTyp1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextArea jtxtBestallningsHistorik;
    private java.awt.Label label1;
    private javax.swing.JLabel lblAdress1;
    private javax.swing.JLabel lblAndraKundMeddelande;
    private javax.swing.JLabel lblAndraProduktdetalj;
    private javax.swing.JLabel lblAndraProduktdetaljMeddelande;
    private javax.swing.JLabel lblAndraStatus;
    private javax.swing.JLabel lblAngeEpost;
    private javax.swing.JLabel lblAngeLangd;
    private javax.swing.JLabel lblAngeModell;
    private javax.swing.JLabel lblAngeNamn;
    private javax.swing.JLabel lblAngePris;
    private javax.swing.JLabel lblBarcode1;
    private javax.swing.JLabel lblBild;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEfternamn1;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblEpost1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblFel;
    private javax.swing.JLabel lblForNamn1;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblFornamn1;
    private javax.swing.JLabel lblFrom1;
    private javax.swing.JLabel lblFromWho1;
    private javax.swing.JLabel lblGatuadress;
    private javax.swing.JLabel lblGatuadress1;
    private javax.swing.JLabel lblHojd;
    private javax.swing.JLabel lblHojd1;
    private javax.swing.JLabel lblHojd2;
    private javax.swing.JLabel lblKund;
    private javax.swing.JLabel lblKundAdress1;
    private javax.swing.JLabel lblKundNamn;
    private javax.swing.JLabel lblKundNamn1;
    private javax.swing.JLabel lblKundNamn2;
    private javax.swing.JLabel lblLagerforHatten1;
    private javax.swing.JLabel lblLagerforaHattMsg;
    private javax.swing.JLabel lblLogoFrakt1;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblNuvarandeAnvandare;
    private javax.swing.JLabel lblOrderNumber1;
    private javax.swing.JLabel lblOrderNummer;
    private javax.swing.JLabel lblOrderNummer2;
    private javax.swing.JLabel lblOrderNummer3;
    private javax.swing.JLabel lblOrderSidaMeddelande;
    private javax.swing.JLabel lblOrdersida;
    private javax.swing.JLabel lblOrt;
    private javax.swing.JLabel lblOrt1;
    private javax.swing.JLabel lblPaborjadOrder;
    private javax.swing.JLabel lblPaketInfoMeddelande;
    private javax.swing.JLabel lblPayCustoms1;
    private javax.swing.JLabel lblPersonalEfternamn4;
    private javax.swing.JLabel lblPersonalEpost4;
    private javax.swing.JLabel lblPersonalFornamn4;
    private javax.swing.JLabel lblPersonalLosenord4;
    private javax.swing.JLabel lblPhone1;
    private javax.swing.JLabel lblPhoneTo1;
    private javax.swing.JLabel lblPostnummer;
    private javax.swing.JLabel lblPostnummer1;
    private javax.swing.JLabel lblProduktdetaljGodkand;
    private javax.swing.JLabel lblProduktdetaljHatt;
    private javax.swing.JLabel lblProduktdetaljModell;
    private javax.swing.JLabel lblProduktdetaljPris;
    private javax.swing.JLabel lblRedigeraPersonal4;
    private javax.swing.JLabel lblRedigeraPersonalMeddelande;
    private javax.swing.JLabel lblRedigeraPersonalValj4;
    private javax.swing.JLabel lblRubrikDatum;
    private javax.swing.JLabel lblRubrikDatum1;
    private javax.swing.JLabel lblRubrikKund;
    private javax.swing.JLabel lblRubrikLaggTIllOrder;
    private javax.swing.JLabel lblRubrikLaggTIllOrder1;
    private javax.swing.JLabel lblRubrikLaggTIllOrder2;
    private javax.swing.JLabel lblRubrikOrder;
    private javax.swing.JLabel lblRubrikOrder1;
    private javax.swing.JLabel lblRubrikPrioritering;
    private javax.swing.JLabel lblRubtikTotalSumma;
    private javax.swing.JLabel lblSkapaHatt;
    private javax.swing.JLabel lblSkapaHattMeddelande;
    private javax.swing.JLabel lblSkapaKund;
    private javax.swing.JLabel lblSkapaKundMeddelande;
    private javax.swing.JLabel lblSkrivIn;
    private javax.swing.JLabel lblSparat;
    private javax.swing.JLabel lblStartSida;
    private javax.swing.JLabel lblStorlek;
    private javax.swing.JLabel lblStorlek1;
    private javax.swing.JLabel lblTaBortAngeEpost;
    private javax.swing.JLabel lblTaBortEnPersonal;
    private javax.swing.JLabel lblTaBortEpost;
    private javax.swing.JLabel lblTaBortKund;
    private javax.swing.JLabel lblTaBortMeddelande;
    private javax.swing.JLabel lblTaBortPersonal;
    private javax.swing.JLabel lblTaBortPersonalEpost;
    private javax.swing.JLabel lblTaBortPersonalMeddelande;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JLabel lblTelefon1;
    private javax.swing.JLabel lblTest;
    private javax.swing.JLabel lblTest1;
    private javax.swing.JLabel lblTo1;
    private javax.swing.JLabel lblValjHatt1;
    private javax.swing.JLabel lblValjHattMeddelande;
    private javax.swing.JLabel lblValjKund1;
    private javax.swing.JLabel lblValjTyp;
    private javax.swing.JLabel lblVikt;
    private javax.swing.JLabel lblVisaOrder;
    private javax.swing.JLabel lblVisaPaketInformationRubrik;
    private javax.swing.JList<String> list1;
    private javax.swing.JList<String> list2;
    private javax.swing.JList<String> listHattarIOrder;
    private javax.swing.JList<String> listPaborjadeOrdrar;
    private javax.swing.JList<String> orderLista;
    private javax.swing.JButton personalTillHatt;
    private javax.swing.JScrollPane planeringsLista;
    private javax.swing.JPanel pnlBestallningshistorik;
    private javax.swing.JPanel pnlFraktSedel1;
    private javax.swing.JPanel pnlHattar;
    private javax.swing.JPanel pnlKund;
    private javax.swing.JPanel pnlLagerforHatt;
    private javax.swing.JPanel pnlMitten;
    private javax.swing.JPanel pnlOrdersida;
    private javax.swing.JPanel pnlPagaendeOrdern;
    private javax.swing.JPanel pnlPaketinfo;
    private javax.swing.JPanel pnlPersonalsida;
    private javax.swing.JPanel pnlPlaneringsYta;
    private javax.swing.JPanel pnlProduktdetaljer;
    private javax.swing.JPanel pnlRedigeraKund;
    private javax.swing.JPanel pnlRedigeraPersonal4;
    private javax.swing.JPanel pnlSideBarHoger;
    private javax.swing.JPanel pnlSideBarVanster;
    private javax.swing.JPanel pnlSkapaKund;
    private javax.swing.JPanel pnlSkapaOrder;
    private javax.swing.JPanel pnlStartsida;
    private javax.swing.JPanel pnlStatistik;
    private javax.swing.JPanel pnlTaBortKund;
    private javax.swing.JPanel pnlTaBortPersonal;
    private javax.swing.JPanel pnlValjHatt;
    private javax.swing.JPanel pnlVisaMaterial;
    private javax.swing.JPasswordField pwdRedigeraPersonalLosenord;
    private javax.swing.JButton taBortpersonalFranHatt;
    private javax.swing.JTable tblMaterial;
    private javax.swing.JTextField txtAngeBredd;
    private javax.swing.JTextField txtAngeFraktkostnad;
    private javax.swing.JTextField txtAngeHojd;
    private javax.swing.JTextField txtAngeLangd;
    private javax.swing.JTextField txtAngeNamn;
    private javax.swing.JTextField txtAngePris;
    private javax.swing.JTextField txtAngeStorlek;
    private javax.swing.JTextField txtAngeTxt;
    private javax.swing.JTextField txtAngeVikt;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtEfternamn;
    private javax.swing.JTextField txtEfternamn1;
    private javax.swing.JTextField txtEpost1;
    private javax.swing.JTextField txtFornamn;
    private javax.swing.JTextField txtFornamn1;
    private javax.swing.JTextField txtGatuadress;
    private javax.swing.JTextField txtGatuadress1;
    private javax.swing.JTextField txtKommentar;
    private javax.swing.JTextField txtKommentar1;
    private javax.swing.JTextField txtOrt;
    private javax.swing.JTextField txtOrt1;
    private javax.swing.JTextField txtPostnummer;
    private javax.swing.JTextField txtPostnummer1;
    private javax.swing.JTextField txtProduktdetaljModell;
    private javax.swing.JTextField txtProduktdetaljNamn;
    private javax.swing.JTextField txtProduktdetaljPris;
    private javax.swing.JTextField txtRedigeraPersonalEfternamn;
    private javax.swing.JTextField txtRedigeraPersonalEpost;
    private javax.swing.JTextField txtRedigeraPersonalFornamn;
    private javax.swing.JTextArea txtSammanstallning;
    private javax.swing.JTextArea txtStatistik;
    private javax.swing.JTextField txtTelefon;
    private javax.swing.JTextField txtTelefon1;
    private javax.swing.JTextField txtTotalSumma;
    // End of variables declaration//GEN-END:variables
}
